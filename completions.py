import sublime
import sublime_plugin
import json

def plugin_loaded():
	global settings
	settings = sublime.load_settings("MKB.sublime-settings")


def case(text):
	return text.upper() if settings.get("autocomplete_caps") else text.lower()

def args(text1, text2="$1"):
	return "({})".format(text1) if settings.get("autocomplete_args") else "({})".format(text2)

def optional(text):
	return "{}".format(text) if settings.get("autocomplete_args") else ""


class mkbcompletions(sublime_plugin.EventListener):
	def on_query_completions(self, view, prefix, locations):
		if view.match_selector(view.line(locations[0]).a, "comment.mkb"):
			return ([],sublime.INHIBIT_EXPLICIT_COMPLETIONS)
		elif view.match_selector(0, "source.mkb"):
			in_string = view.match_selector(sublime.active_window().active_view().sel()[0].a, "string.mkb")
			var_wrap = "%" if settings.get("var_wrap") or in_string else ""
			semicolon = ";" if settings.get("semicolon_end") else ""

			completions = [

			# Control Flow
				sublime.CompletionItem( #if
					trigger="if", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;condition&#62; evaluates to true", 
					completion=case("if")+args("${1:<condition>}")+semicolon+"\n\t$2\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #else
					trigger="else", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if no if-clause before evaluated to true", 
					completion=case("else")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseif
					trigger="elseif", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the evaluates to true and no if-clause before evaluated to true", 
					completion=case("elseif")+args("${1:<condition>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #endif
					trigger="endif", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="…"+case("endif"), 
					details="Ends an if-clause", 
					completion=case("endif")+semicolon+"\n"), 
				sublime.CompletionItem( #for
					trigger="for", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("for")+"(var,start,end)…"+case("next"), 
					details="Begins a for loop", 
					completion=case("for")+args("#${1:<var>},${2:<start>},${3:<end>}")+semicolon+"\n\t$4\n"+case("next")+semicolon), 
				sublime.CompletionItem( #for
					trigger="for", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("for")+"(var = start to end)…"+case("next"), 
					details="Begins a for loop", 
					completion=case("for")+args("#${1:<var>} = ${2:<start>} to ${3:<end>}")+semicolon+"\n\t$4\n"+case("next")+semicolon), 
				sublime.CompletionItem( #for
					trigger="for", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("for")+"(var = start to end step)…"+case("next"), 
					details="Begins a for loop", 
					completion=case("for")+args("#${1:<var>} = ${2:<start>} to ${3:<end>} step ${4:<step>}")+semicolon+"\n\t$5\n"+case("next")+semicolon), 
				sublime.CompletionItem( #foreach
					trigger="foreach", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("foreach")+"(iterator)…"+case("next"), 
					details="Begins a loop over the specified iterator", 
					completion=case("foreach")+args("${1:<iterator>}")+semicolon+"\n\t$2\n"+case("next")+semicolon), 
				sublime.CompletionItem( #foreach
					trigger="foreach", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("foreach")+"(array,content,index)…"+case("next"), 
					details="Begins a loop over the specified iterator", 
					completion=case("foreach")+args("${1:<array>}[],${2:<content>},#${3:[index]}")+semicolon+"\n\t$4\nnext"+semicolon), 
				sublime.CompletionItem( #foreach
					trigger="foreach", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("foreach")+"(array as content)…"+case("next"), 
					details="Begins a loop over the specified iterator", 
					completion=case("foreach")+args("${1:<array>}[] as &${2:<content>}")+semicolon+"\n\t$3\n"+case("next")+semicolon), 
				sublime.CompletionItem( #foreach
					trigger="foreach", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("foreach")+"(array as index => content)…"+case("next"), 
					details="Begins a loop over the specified iterator", 
					completion=case("foreach")+args("${1:<array>}[] as #${2:<index>} => ${3:<content>}")+semicolon+"\n\t$4\n"+case("next")+semicolon), 
				sublime.CompletionItem( #do
					trigger="do", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("loop"), 
					details="Begins a loop", 
					completion=case("do")+args("${1:[count]}")+semicolon+"\n\t$2\n"+case("loop")+semicolon), 
				sublime.CompletionItem( #do
					trigger="do", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("while"), 
					details="Begins a loop", 
					completion=case("do")+args("${1:[count]}")+semicolon+"\n\t$2\n"+case("while")+args("${2:<condition>}","$2")+semicolon), 
				sublime.CompletionItem( #do
					trigger="do", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("until"), 
					details="Begins a loop", 
					completion=case("do")+args("${1:[count]}")+semicolon+"\n\t$2\n"+case("until")+args("${2:<condition>}","$2")+semicolon), 
				sublime.CompletionItem( #loop
					trigger="loop", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Closes a do loop", 
					completion=case("loop")+semicolon), 
				sublime.CompletionItem( #while
					trigger="while", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if the &#60;condition&#62; is not met", 
					completion=case("while")+args("${1:<condition>}")+semicolon+"\n$2"), 
				sublime.CompletionItem( #until
					trigger="until", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if the &#60;condition&#62; is met", 
					completion=case("until")+args("${1:<condition>}")+semicolon+"\n$2"), 

				sublime.CompletionItem( #ifbeginswith
					trigger="ifbeginswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET,  
					annotation="…"+case("endif"), 
					details="Executes if the &#60;haystack&#62; starts with the &#60;needle&#62;", 
					completion=case("ifbeginswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifcanharvestblock
					trigger="ifcanharvestblock", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the &#60;blockid&#62; can currently be harvested", 
					completion=case("ifcanharvestblock")+args("${1:<blockid>}")+semicolon+"\n\t$2\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifcontains
					trigger="ifcontains", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;haystack&#62; contains the &#60;needle&#62;", 
					completion=case("ifcontains")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifenchanted
					trigger="ifenchanted", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the item at &#60;slot&#62; is enchanted", 
					completion=case("ifenchanted")+args("${1:<slot>},&${2:[item]},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon+"\n\t$6\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifendswith
					trigger="ifendswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;haystack&#62; ends with the &#60;needle&#62;", 
					completion=case("ifendswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #iffileexists
					trigger="iffileexists", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the file exists at &#60;path&#62;", 
					completion=case("iffileexists")+args("${1:<path>},${2:[expression]}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifininv
					trigger="ifininv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the &#60;items&#62; are in the inventory, mode can be 'any', 'all' or number", 
					completion=case("ifininv")+args("${1:[mode]},${2:<items>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifinvisfull
					trigger="ifinvisfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the inventory is full", 
					completion=case("ifinvisfull")+args("${1:[item]}")+semicolon+"\n\t$2\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifmatches
					trigger="ifmatches", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;subject&#62; matches the &#60;pattern&#62;", 
					completion=case("ifmatches")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]}")+semicolon+"\n\t$5\n"+case("endif")+semicolon), 

				sublime.CompletionItem( #ifnotbeginswith
					trigger="ifnotbeginswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET,  
					annotation="…"+case("endif"), 
					details="Executes if the &#60;haystack&#62; does not start with the &#60;needle&#62;", 
					completion=case("ifnotbeginswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotcanharvestblock
					trigger="ifnotcanharvestblock", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the &#60;blockid&#62; cannot currently be harvested", 
					completion=case("ifnotcanharvestblock")+args("${1:<blockid>}")+semicolon+"\n\t$2\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotcontains
					trigger="ifnotcontains", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;haystack&#62; does not contain the &#60;needle&#62;", 
					completion=case("ifnotcontains")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotenchanted
					trigger="ifnotenchanted", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the item at &#60;slot&#62; is not enchanted", 
					completion=case("ifnotenchanted")+args("${1:<slot>},&${2:[item]},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon+"\n\t$6\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotendswith
					trigger="ifnotendswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;haystack&#62; does not end with the &#60;needle&#62;", 
					completion=case("ifnotendswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotfileexists
					trigger="ifnotfileexists", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the file does not exists at &#60;path&#62;", 
					completion=case("ifnotfileexists")+args("${1:<path>},${2:[expression]}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotininv
					trigger="ifnotininv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the &#60;items&#62; are not in the inventory, mode can be 'any', 'all' or number", 
					completion=case("ifnotininv")+args("${1:[mode]},${2:<items>}")+semicolon+"\n\t$3\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotinvisfull
					trigger="ifnotinvisfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)"+" …"+case("endif"), 
					details="Executes if the inventory is not full", 
					completion=case("ifnotinvisfull")+args("${1:[item]}")+semicolon+"\n\t$2\n"+case("endif")+semicolon), 
				sublime.CompletionItem( #ifnotmatches
					trigger="ifnotmatches", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endif"), 
					details="Executes if the &#60;subject&#62; does not match the &#60;pattern&#62;", 
					completion=case("ifnotmatches")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]}")+semicolon+"\n\t$5\n"+case("endif")+semicolon), 

				sublime.CompletionItem( #elseifbeginswith
					trigger="elseifbeginswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;haystack&#62; starts with the &#60;needle&#62; and no if-clause before evaluated to true", 
					completion=case("elseifbeginswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifcanharvestblock
					trigger="elseifcanharvestblock", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the &#60;blockid&#62; can currently be harvested and no if-clause before evaluated to true", 
					completion=case("elseifcanharvestblock")+args("${1:<blockid>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifcontains
					trigger="elseifcontains", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;haystack&#62; contains the &#60;needle&#62; and no if-clause before evaluated to true", 
					completion=case("elseifcontains")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifenchanted
					trigger="elseifenchanted", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the item at &#60;slot&#62; is enchanted and no if-clause before evaluated to true", 
					completion=case("elseifenchanted")+args("${1:<slot>},&${2:[item]},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifendswith
					trigger="elseifendswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;haystack&#62; ends with the &#60;needle&#62; and no if-clause before evaluated to true", 
					completion=case("elseifendswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseiffileexist
					trigger="elseiffileexist", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the file exists at &#60;path&#62; and no if-clause before evaluated to true", 
					completion=case("elseiffileexists")+args("${1:<path>},${2:[expression if file should be created if missing]}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifininv
					trigger="elseifininv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the &#60;items&#62; are in the inventory and no if-clause before evaluated to true", 
					completion=case("elseifininv")+args("${1:[mode]},${2:<items>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifinvisfull
					trigger="elseifinvisfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the inventory is full and no if-clause before evaluated to true", 
					completion=case("elseifinvisfull")+args("${1:[item]}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifmatches
					trigger="elseifmatches", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;subject&#62; matches the &#60;pattern&#62; and no if-clause before evaluated to true", 
					completion=case("elseifmatches")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]}")+semicolon+"\n\t"), 

				sublime.CompletionItem( #elseifnotbeginswith
					trigger="elseifnotbeginswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;haystack&#62; does not start with the &#60;needle&#62; and no if-clause before evaluated to true", 
					completion=case("elseifnotbeginswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotcanharvestblock
					trigger="elseifnotcanharvestblock", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the &#60;blockid&#62; cannot currently be harvested and no if-clause before evaluated to true", 
					completion=case("elseifnotcanharvestblock")+args("${1:<blockid>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotcontains
					trigger="elseifnotcontains", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;haystack&#62; does not contain the &#60;needle&#62; and no if-clause before evaluated to true", 
					completion=case("elseifnotcontains")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotenchanted
					trigger="elseifnotenchanted", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the item at &#60;slot&#62; is not enchanted and no if-clause before evaluated to true", 
					completion=case("elseifnotenchanted")+args("${1:<slot>},&${2:[item]},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotendswith
					trigger="elseifnotendswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;haystack&#62; does not end with the &#60;needle&#62; and no if-clause before evaluated to true", 
					completion=case("elseifnotendswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotfileexist
					trigger="elseifnotfileexist", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the file does not exist at &#60;path&#62; and no if-clause before evaluated to true", 
					completion=case("elseifnotfileexists")+args("${1:<path>},${2:[expression if file should be created if missing]}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotininv
					trigger="elseifnotininv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the &#60;items&#62; are not in the inventory and no if-clause before evaluated to true", 
					completion=case("elseifnotininv")+args("${1:[mode]},${2:<items>}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotinvisfull
					trigger="elseifnotinvisfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Executes if the inventory is not full and no if-clause before evaluated to true", 
					completion=case("elseifnotinvisfull")+args("${1:[item]}")+semicolon+"\n\t"), 
				sublime.CompletionItem( #elseifnotmatches
					trigger="elseifnotmatches", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Executes if the &#60;subject&#62; does not match the &#60;pattern&#62; and no if-clause before evaluated to true", 
					completion=case("elseifnotmatches")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]}")+semicolon+"\n\t"), 

				sublime.CompletionItem( #whilebeginswith
					trigger="whilebeginswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if &#60;haystack&#62; does not start with the &#60;needle&#62;", 
					completion=case("whilebeginswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n"), 
				sublime.CompletionItem( #whilecanharvestblock
					trigger="whilecanharvestblock", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the &#60;blockid&#62; cannot currently be harvested", 
					completion=case("whilecanharvestblock")+args("${1:<blockid>}")+semicolon+"\n"), 
				sublime.CompletionItem( #whilecontains
					trigger="whilecontains", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if &#60;haystack&#62; does not contain the &#60;needle&#62;", 
					completion=case("whilecontains")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n"), 
				sublime.CompletionItem( #whileenchanted
					trigger="whileenchanted", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the item at &#60;slot&#62; is not enchanted", 
					completion=case("whileenchanted")+args("${1:<slot>},&${2:[item]},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon+"\n"), 
				sublime.CompletionItem( #whileendswith
					trigger="whileendswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if &#60;haystack&#62; does not end with the &#60;needle&#62;", 
					completion=case("whileendswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n"), 
				sublime.CompletionItem( #whilefileexist
					trigger="whilefileexist", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the file does not exist at &#60;path&#62;", 
					completion=case("whilefileexists")+args("${1:<path>},${2:[expression if file should be created if missing]}")+semicolon+"\n"), 
				sublime.CompletionItem( #whileininv
					trigger="whileininv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the &#60;items&#62; are not in the inventory", 
					completion=case("whileininv")+args("${1:[mode]},${2:<items>}")+semicolon+"\n"), 
				sublime.CompletionItem( #whileinvisfull
					trigger="whileinvisfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the inventory is not full", 
					completion=case("whileinvisfull")+args("${1:[item]}")+semicolon+"\n"), 
				sublime.CompletionItem( #whilematches
					trigger="whilematches", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if the &#60;subject&#62; does not match the &#60;pattern&#62;", 
					completion=case("whilematches")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]}")+semicolon+"\n"), 

				sublime.CompletionItem( #untilbeginswith
					trigger="untilbeginswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if &#60;haystack&#62; starts with the &#60;needle&#62;", 
					completion=case("untilbeginswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilcanharvestblock
					trigger="untilcanharvestblock", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the &#60;blockid&#62; can currently be harvested", 
					completion=case("untilcanharvestblock")+args("${1:<blockid>}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilcontains
					trigger="untilcontains", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if &#60;haystack&#62; contains the &#60;needle&#62;", 
					completion=case("untilcontains")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilenchanted
					trigger="untilenchanted", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the item at &#60;slot&#62; is enchanted", 
					completion=case("untilenchanted")+args("${1:<slot>},&${2:[item]},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilendswith
					trigger="untilendswith", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if &#60;haystack&#62; ends with the &#60;needle&#62;", 
					completion=case("untilendswith")+args("${1:<haystack>},${2:<needle>}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilfileexist
					trigger="untilfileexist", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the file exists at &#60;path&#62;", 
					completion=case("untilfileexists")+args("${1:<path>},${2:[expression if file should be created if missing]}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilininv
					trigger="untilininv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the &#60;items&#62; are in the inventory", 
					completion=case("untilininv")+args("${1:[mode]},${2:<items>}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilinvisfull
					trigger="untilinvisfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Exits do loop if the inventory is full", 
					completion=case("untilinvisfull")+args("${1:[item]}")+semicolon+"\n"), 
				sublime.CompletionItem( #untilmatches
					trigger="untilmatches", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Exits do loop if the &#60;subject&#62; matches the &#60;pattern&#62;", 
					completion=case("untilmatches")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]}")+semicolon+"\n"), 

				sublime.CompletionItem( #unsafe
					trigger="unsafe", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="…"+case("endunsafe"), 
					details="Begins an unsafe block with maximum executions set to &#60;executions&#62;", 
					completion=case("unsafe")+args("${1:<executions>}")+semicolon+"\n\t$2\n"+case("endunsafe")+semicolon), 
				sublime.CompletionItem( #endunsafe
					trigger="endunsafe", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Ends an active unsafe block", 
					completion=case("endunsafe")+semicolon+"\n"), 

			# My custom completions
				sublime.CompletionItem( #function
					trigger="function: print", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_FUNCTION, 
					annotation="", 
					details="Create Function: print(&#60;text&#62)", 
					completion=case("function")+" "+case("print")+"(&text)"+semicolon+"\n\t"+case("log")+"(\"%&text%\")"+semicolon+"\n"+case("endfunction")+semicolon+"\n"), 
				sublime.CompletionItem( #print
					trigger="call: print", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_FUNCTION, 
					annotation="", 
					details="Call Function: call print(&#60;text&#62)", 
					completion=case("print")+args("${1:<text>}")+semicolon), 
				sublime.CompletionItem( #array
					trigger="function: array", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_FUNCTION, 
					annotation="", 
					details="Create Function: create array with the specified values in one line", 
					completion=case("function array")+args("...&values[]")+semicolon+"\n\t"+case("return")+args("&values[]")+semicolon+"\n"+case("endfunction")+semicolon+""), 
				sublime.CompletionItem( #array
					trigger="call: array", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_FUNCTION, 
					annotation="", 
					details="Call Function: create array with the specified values in one line", 
					completion=case("array")+args("...&values[]")+semicolon), 
				

			# AEI Module
				sublime.CompletionItem( #getiteminfo
					trigger="getiteminfo", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(AEI Module)", 
					details="Gets information about the specified slot", 
					completion=case("getiteminfo")+args("${1:<slot>},&${2:[idvar]},#${3:[stacksize]},#${4:[datavar]},&${5:[display]},&${6:[lore]}")+semicolon), 
				sublime.CompletionItem( #getguiname
					trigger="getguiname", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(AEI Module)", 
					details="Gets the display name of the current GUI", 
					completion=case("getguiname")+args("&${1:<name>}")+semicolon), 
				sublime.CompletionItem( #invfull
					trigger="invfull", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(AEI Module)", 
					details="Returns empty or full in the string defined", 
					completion=case("invfull")+args("&${1:<string>}")+semicolon), 
				sublime.CompletionItem( #MODULEAEI
					trigger="MODULEAEI", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(AEI Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEAEI"+var_wrap), 

			# anvilRename Module
				sublime.CompletionItem( #setanviltext
					trigger="setanviltext", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(anvilRename Module)", 
					details="set name to string", 
					completion=case("setanviltext")+args("${1:<string>}")+semicolon), 
				sublime.CompletionItem( #MODULEANVIL
					trigger="MODULEANVIL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(anvilRename Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEANVIL"+var_wrap), 

			# BaritoneAddon Module
				sublime.CompletionItem( #baritone
					trigger="baritone", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Runs any baritone command", 
					completion=case("baritone")+args("${1:<command>}")+semicolon), 
				sublime.CompletionItem( #goto
					trigger="goto", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Pathfinds to specified coordinates", 
					completion=case("goto")+args("${1:<x>},${2:<y>},${3:<z>}")+semicolon), 
				sublime.CompletionItem( #setting
					trigger="setting", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Changes baritone setting", 
					completion=case("setting")+args("${1:<settingname>},${2:<value>}")+semicolon), 
				sublime.CompletionItem( #cancel
					trigger="cancel", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Cancels current process", 
					completion=case("cancel")+args("")+semicolon), 
				sublime.CompletionItem( #pause
					trigger="pause", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Pauses current process", 
					completion=case("pause")+args("")+semicolon), 
				sublime.CompletionItem( #resume
					trigger="resume", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Resumes current process", 
					completion=case("resume")+args("")+semicolon), 
				sublime.CompletionItem( #mine
					trigger="mine", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Searchs and mines provied block", 
					completion=case("mine")+args("${1:<blockname>}")+semicolon), 
				sublime.CompletionItem( #farm
					trigger="farm", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Farms near by crops toggle replant", 
					completion=case("farm")+args("")+semicolon), 
				sublime.CompletionItem( #selstart
					trigger="selstart", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Sets pos1 of selection", 
					completion=case("selstart")+args("${1:<x>},${2:<y>},${3:<z>}")+semicolon), 
				sublime.CompletionItem( #selend
					trigger="selend", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Sets pos2 of selection", 
					completion=case("selend")+args("${1:<x>},${2:<y>},${3:<z>}")+semicolon), 
				sublime.CompletionItem( #selclear
					trigger="selclear", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Clears selections", 
					completion=case("selclear")+args("")+semicolon), 
				sublime.CompletionItem( #selreplace
					trigger="selreplace", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(BaritoneAddon Module)", 
					details="Replace specified block with replacement block", 
					completion=case("selreplace")+args("${1:<blocktoreplace>},${2:<replacementblock>}")+semicolon), 
				sublime.CompletionItem( #BARITONE
					trigger="BARITONE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="True if baritone is running any process", 
					completion=var_wrap+"BARITONE"+var_wrap), 
				sublime.CompletionItem( #PATHFINDING
					trigger="PATHFINDING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="True if baritone is pathfinding to position", 
					completion=var_wrap+"PATHFINDING"+var_wrap), 
				sublime.CompletionItem( #FARMING
					trigger="FARMING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="True if baritone is running the process #farm", 
					completion=var_wrap+"FARMING"+var_wrap), 
				sublime.CompletionItem( #MINING
					trigger="MINING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="True if baritone is running the process #mine", 
					completion=var_wrap+"MINING"+var_wrap), 
				sublime.CompletionItem( #FOLLOWING
					trigger="FOLLOWING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="True if baritone is running the process #follow", 
					completion=var_wrap+"FOLLOWING"+var_wrap), 
				sublime.CompletionItem( #BUILDING
					trigger="BUILDING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="True if baritone is running a build process", 
					completion=var_wrap+"BUILDING"+var_wrap), 
				sublime.CompletionItem( #ALLOWBREAK
					trigger="ALLOWBREAK", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Allow Baritone to break blocks", 
					completion=var_wrap+"ALLOWBREAK"+var_wrap), 
				sublime.CompletionItem( #ALLOWPLACE
					trigger="ALLOWPLACE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Allow Baritone to place blocks", 
					completion=var_wrap+"ALLOWPLACE"+var_wrap), 
				sublime.CompletionItem( #ALLOWSPRINT
					trigger="ALLOWSPRINT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Allow Baritone to sprint", 
					completion=var_wrap+"ALLOWSPRINT"+var_wrap), 
				sublime.CompletionItem( #ALLOWPARKOUR
					trigger="ALLOWPARKOUR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Allow Baritone to parkour", 
					completion=var_wrap+"ALLOWPARKOUR"+var_wrap), 
				sublime.CompletionItem( #ALLOWINVENTORY
					trigger="ALLOWINVENTORY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Allow Baritone to move items in your inventory to your hotbar", 
					completion=var_wrap+"ALLOWINVENTORY"+var_wrap), 
				sublime.CompletionItem( #ALLOWWALKONBOTTOMSLAB
					trigger="ALLOWWALKONBOTTOMSLAB", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Slab behavior is complicated, disable this for higher path reliability", 
					completion=var_wrap+"ALLOWWALKONBOTTOMSLAB"+var_wrap), 
				sublime.CompletionItem( #ALLOWWATERBUCKETFALL
					trigger="ALLOWWATERBUCKETFALL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Allow Baritone to fall arbitrary distances and place a water bucket beneath it", 
					completion=var_wrap+"ALLOWWATERBUCKETFALL"+var_wrap), 
				sublime.CompletionItem( #BLOCKBREAKADDITIONALMENTPENALTY
					trigger="BLOCKBREAKADDITIONALMENTPENALTY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="This is just a tiebreaker to make it less likely to break blocks if it can avoid it", 
					completion=var_wrap+"BLOCKBREAKADDITIONALMENTPENALTY"+var_wrap), 
				sublime.CompletionItem( #BLOCKPLACEMENTPENALTY
					trigger="BLOCKPLACEMENTPENALTY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="It doesn't actually take twenty ticks to place a block, this cost is so high because we want to generally conserve blocks which might be limited", 
					completion=var_wrap+"BLOCKPLACEMENTPENALTY"+var_wrap), 
				sublime.CompletionItem( #BLOCKREACHDISTANCE
					trigger="BLOCKREACHDISTANCE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Block reach distance", 
					completion=var_wrap+"BLOCKREACHDISTANCE"+var_wrap), 
				sublime.CompletionItem( #MAXFALLHEIGHTNOWATER
					trigger="MAXFALLHEIGHTNOWATER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="How far are you allowed to fall onto solid ground (without a water bucket)? 3 won't deal any damage", 
					completion=var_wrap+"MAXFALLHEIGHTNOWATER"+var_wrap), 
				sublime.CompletionItem( #FREELOOK
					trigger="FREELOOK", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Move without having to force the client-sided rotations", 
					completion=var_wrap+"FREELOOK"+var_wrap), 
				sublime.CompletionItem( #REPLANTCROPS
					trigger="REPLANTCROPS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Replant normal Crops while farming and leave cactus and sugarcane to regrow", 
					completion=var_wrap+"REPLANTCROPS"+var_wrap), 
				sublime.CompletionItem( #MODULEBARITONE
					trigger="MODULEBARITONE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(BaritoneAddon Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEBARITONE"+var_wrap), 

			# charModule
				sublime.CompletionItem( #char
					trigger="char", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(char Module)", 
					details="Returns character with unicode value", 
					completion="&${1:<char>} = "+case("char")+args("${2:<decimal unicode value>}")+semicolon), 
				sublime.CompletionItem( #P
					trigger="P", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(char Module)", 
					details="Returns paragraph character", 
					completion=var_wrap+"P"+var_wrap), 
				sublime.CompletionItem( #DOLLAR
					trigger="DOLLAR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(char Module)", 
					details="Returns one dollar character", 
					completion=var_wrap+"DOLLAR"+var_wrap), 
				sublime.CompletionItem( #DOLLARS
					trigger="DOLLARS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(char Module)", 
					details="Returns two dollar character", 
					completion=var_wrap+"DOLLARS"+var_wrap), 
				sublime.CompletionItem( #MODULECHARICE
					trigger="MODULECHARICE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(char Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULECHARICE"+var_wrap), 

			# Clipboard Module
				sublime.CompletionItem( #getclipboard
					trigger="getclipboard", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Clipboard Module)", 
					details="Returns content of clipboard", 
					completion=case("getclipboard")+args("&${1:[text]}")+semicolon), 
				sublime.CompletionItem( #setclipboard
					trigger="setclipboard", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Clipboard Module)", 
					details="Sets the clipboard text", 
					completion=case("setclipboard")+args("${1:<text>}")+semicolon), 
				sublime.CompletionItem( #MODULECLIPBOARD
					trigger="MODULECLIPBOARD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Clipboard Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULECLIPBOARD"+var_wrap), 

			# CodeExporter Module
				sublime.CompletionItem( #codeexport
					trigger="codeexport", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(CodeExporter Module)", 
					details="Exports all currently running code into the specified directory or macros/exports by default", 
					completion=case("codeexport")+args("${1:[&directory]}")+semicolon), 

			# Cloudscript Module
				sublime.CompletionItem( #run
					trigger="run", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Runs the specified script from cloudscript", 
					completion=case("run")+args("${1:<cloudscript>}")+semicolon), 
				sublime.CompletionItem( #addanim
					trigger="addanim", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Add animation", 
					completion=case("addanim")+args("&${1:<array>}[]")+semicolon), 
				sublime.CompletionItem( #event
					trigger="event", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Used by cloudscript to run an event", 
					completion=case("event")+args("${1:<projectId>}")+semicolon), 
				sublime.CompletionItem( #chat
					trigger="chat", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Open cloudchat", 
					completion=case("chat")+semicolon), 
				sublime.CompletionItem( #getkeybind
					trigger="getkeybind", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Get the macro on that key", 
					completion=case("getkeybind")+args("${1:<key>},&${2:<outvar>}")+semicolon), 
				sublime.CompletionItem( #setkeybind
					trigger="setkeybind", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Set a macro on that key", 
					completion=case("setkeybind")+args("${1:<key>},${2:<some code>}")+semicolon), 
				sublime.CompletionItem( #return
					trigger="return", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="End a macro and return a value", 
					completion=case("return")+args("${1:<anything>}")+semicolon), 
				sublime.CompletionItem( #sendmessage
					trigger="sendmessage", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Send a message on a websocket channel", 
					completion=case("sendmessage")+args("${1:<channel>},${2:<message>}")+semicolon), 
				sublime.CompletionItem( #encrypt
					trigger="encrypt", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Encrypt the variable content", 
					completion=case("encrypt")+args("&${1:<var>},${2:<16charskey>}")+semicolon), 
				sublime.CompletionItem( #decrypt
					trigger="decrypt", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Decrypt the variable content", 
					completion=case("decrypt")+args("&${1:<var>},${2:<16charskey>}")+semicolon), 
				sublime.CompletionItem( #remove
					trigger="remove", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Cloudscript Module)", 
					details="Remove something from array", 
					completion=case("remove")+args("&${1:<array>}[],&${2:<outvar>},${3:[pos]}")+semicolon), 

			# Documentor Module
				sublime.CompletionItem( #adddocs
					trigger="adddocs", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Documentor Module)", 
					details="Adds documentation for action", 
					completion=case("adddocs")+args("${1:<name of entry>},${2:[usage]},${3:[description]},${4:[return type]}")+semicolon), 
				sublime.CompletionItem( #listdocs
					trigger="listdocs", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Documentor Module)", 
					details="Returns documentation of action", 
					completion="&${1:docs}[] = "+case("listdocs")+args("${2:[name]}")+semicolon), 

			# Entities iterator Module
				sublime.CompletionItem( #entities
					trigger="entities", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Entities Iterator Module)", 
					details="Iterates over all entities", 
					completion=case("entities")), 
				sublime.CompletionItem( #ENTITYTYPE
					trigger="ENTITYTYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Type of the entity", 
					completion=var_wrap+"ENTITYTYPE"+var_wrap), 
				sublime.CompletionItem( #ENTITYNAME
					trigger="ENTITYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the entity", 
					completion=var_wrap+"ENTITYNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYUUID
					trigger="ENTITYUUID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="UUID of the entity", 
					completion=var_wrap+"ENTITYUUID"+var_wrap), 
				sublime.CompletionItem( #ENTITYXPOSF
					trigger="ENTITYXPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="X coordinates of the entity as float", 
					completion=var_wrap+"ENTITYXPOSF"+var_wrap), 
				sublime.CompletionItem( #ENTITYYPOSF
					trigger="ENTITYYPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Y coordinates of the entity as float", 
					completion=var_wrap+"ENTITYYPOSF"+var_wrap), 
				sublime.CompletionItem( #ENTITYZPOSF
					trigger="ENTITYZPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Z coordinates of the entity as float", 
					completion=var_wrap+"ENTITYZPOSF"+var_wrap), 
				sublime.CompletionItem( #ENTITYXPOS
					trigger="ENTITYXPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="X coordinates of the entity as integer", 
					completion=var_wrap+"ENTITYXPOS"+var_wrap), 
				sublime.CompletionItem( #ENTITYYPOS
					trigger="ENTITYYPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Y coordinates of the entity as integer", 
					completion=var_wrap+"ENTITYYPOS"+var_wrap), 
				sublime.CompletionItem( #ENTITYZPOS
					trigger="ENTITYZPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Z coordinates of the entity as integer", 
					completion=var_wrap+"ENTITYZPOS"+var_wrap), 
				sublime.CompletionItem( #ENTITYTAG
					trigger="ENTITYTAG", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Tag of the entity", 
					completion=var_wrap+"ENTITYTAG"+var_wrap), 
				sublime.CompletionItem( #ENTITYDX
					trigger="ENTITYDX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="X difference between the player and the entity", 
					completion=var_wrap+"ENTITYDX"+var_wrap), 
				sublime.CompletionItem( #ENTITYDY
					trigger="ENTITYDY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Y difference between the player and the entity", 
					completion=var_wrap+"ENTITYDY"+var_wrap), 
				sublime.CompletionItem( #ENTITYDZ
					trigger="ENTITYDZ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Z difference between the player and the entity", 
					completion=var_wrap+"ENTITYDZ"+var_wrap), 
				sublime.CompletionItem( #ENTITYDISTANCE
					trigger="ENTITYDISTANCE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Distance between the player and the entity", 
					completion=var_wrap+"ENTITYDISTANCE"+var_wrap), 
				sublime.CompletionItem( #ENTITYPITCHFROMPLAYER
					trigger="ENTITYPITCHFROMPLAYER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Pitch from the player to entity", 
					completion=var_wrap+"ENTITYPITCHFROMPLAYER"+var_wrap), 
				sublime.CompletionItem( #ENTITYYAWFROMPLAYER
					trigger="ENTITYYAWFROMPLAYER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Yaw from the player to entity", 
					completion=var_wrap+"ENTITYYAWFROMPLAYER"+var_wrap), 
				sublime.CompletionItem( #ENTITYNBT
					trigger="ENTITYNBT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="NBT of the entity", 
					completion=var_wrap+"ENTITYNBT"+var_wrap), 
				sublime.CompletionItem( #ENTITYNBTKEYS
					trigger="ENTITYNBTKEYS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Array of the keys of the NBT of the entity", 
					completion=var_wrap+"ENTITYNBTKEYS"+var_wrap), 
				sublime.CompletionItem( #ENTITYNBT
					trigger="ENTITYNBT<KEY>", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Quick way to access value of a specififc key", 
					completion=var_wrap+"ENTITYNBT${1:<key>}"+var_wrap), 
				sublime.CompletionItem( #ENTITYDIR
					trigger="ENTITYDIR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Fuzzy direction in which the entity is", 
					completion=var_wrap+"ENTITYDIR"+var_wrap), 
				sublime.CompletionItem( #ENTITYPITCH
					trigger="ENTITYPITCH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Pitch where the entity is looking at", 
					completion=var_wrap+"ENTITYPITCH"+var_wrap), 
				sublime.CompletionItem( #ENTITYYAW
					trigger="ENTITYYAW", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Yaw where the entity is looking at", 
					completion=var_wrap+"ENTITYYAW"+var_wrap), 
				sublime.CompletionItem( #ENTITYHEALTH
					trigger="ENTITYHEALTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Health of the entity", 
					completion=var_wrap+"ENTITYHEALTH"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAXHEALTH
					trigger="ENTITYMAXHEALTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Max health of the entity", 
					completion=var_wrap+"ENTITYMAXHEALTH"+var_wrap), 
				sublime.CompletionItem( #ENTITYISITEM
					trigger="ENTITYISITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="True if it's an dropped item", 
					completion=var_wrap+"ENTITYISITEM"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMAGE
					trigger="ENTITYITEMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Age of the dropped item", 
					completion=var_wrap+"ENTITYITEMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMOWNER
					trigger="ENTITYITEMOWNER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Owner of the dropped item", 
					completion=var_wrap+"ENTITYITEMOWNER"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMTHROWER
					trigger="ENTITYITEMTHROWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Thrower of the dropped item", 
					completion=var_wrap+"ENTITYITEMTHROWER"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMNAME
					trigger="ENTITYITEMNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Localized name of the dropped item", 
					completion=var_wrap+"ENTITYITEMTHROWER"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMUNLOCALIZEDNAME
					trigger="ENTITYITEMUNLOCALIZEDNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Unlocalized name of the dropped item", 
					completion=var_wrap+"ENTITYITEMUNLOCALIZEDNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMCOUNT
					trigger="ENTITYITEMCOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the dropped item", 
					completion=var_wrap+"ENTITYITEMCOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMDISPLAYNAME
					trigger="ENTITYITEMDISPLAYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Displayname of the dropped item", 
					completion=var_wrap+"ENTITYITEMDISPLAYNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMDAMAGE
					trigger="ENTITYITEMDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the dropped item", 
					completion=var_wrap+"ENTITYITEMDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMMAXDAMAGE
					trigger="ENTITYITEMMAXDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Max damage of the dropped item", 
					completion=var_wrap+"ENTITYITEMMAXDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMMETADATA
					trigger="ENTITYITEMMETADATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Metadata of the dropped item", 
					completion=var_wrap+"ENTITYITEMMETADATA"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMENCHANTED
					trigger="ENTITYITEMENCHANTED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="True if the dropped item is enchanted", 
					completion=var_wrap+"ENTITYITEMENCHANTED"+var_wrap), 
				sublime.CompletionItem( #ENTITYITEMSTACKABLE
					trigger="ENTITYITEMSTACKABLE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="True if the dropped item is stackable", 
					completion=var_wrap+"ENTITYITEMSTACKABLE"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAINHANDNAME
					trigger="ENTITYMAINHANDNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the mainhand item", 
					completion=var_wrap+"ENTITYMAINHANDNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAINHANDID
					trigger="ENTITYMAINHANDID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="ID of the mainhand item", 
					completion=var_wrap+"ENTITYMAINHANDID"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAINHANDNID
					trigger="ENTITYMAINHANDNID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Numerical ID of the mainhand item", 
					completion=var_wrap+"ENTITYMAINHANDNID"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAINHANDDAMAGE
					trigger="ENTITYMAINHANDDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the mainhand item", 
					completion=var_wrap+"ENTITYMAINHANDDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAINHANDCOUNT
					trigger="ENTITYMAINHANDCOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the mainhand item", 
					completion=var_wrap+"ENTITYMAINHANDCOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYMAINHANDENCHANTMENTS
					trigger="ENTITYMAINHANDENCHANTMENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Enchantments of the mainhand item", 
					completion=var_wrap+"ENTITYMAINHANDENCHANTMENTS"+var_wrap), 
				sublime.CompletionItem( #ENTITYOFFHANDNAME
					trigger="ENTITYOFFHANDNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the offhand item", 
					completion=var_wrap+"ENTITYOFFHANDNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYOFFHANDID
					trigger="ENTITYOFFHANDID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="ID of the offhand item", 
					completion=var_wrap+"ENTITYOFFHANDID"+var_wrap), 
				sublime.CompletionItem( #ENTITYOFFHANDNID
					trigger="ENTITYOFFHANDNID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Numerical ID of the offhand item", 
					completion=var_wrap+"ENTITYOFFHANDNID"+var_wrap), 
				sublime.CompletionItem( #ENTITYOFFHANDDAMAGE
					trigger="ENTITYOFFHANDDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the offhand item", 
					completion=var_wrap+"ENTITYOFFHANDDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYOFFHANDCOUNT
					trigger="ENTITYOFFHANDCOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the offhand item", 
					completion=var_wrap+"ENTITYOFFHANDCOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYOFFHANDENCHANTMENTS
					trigger="ENTITYOFFHANDENCHANTMENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Enchantments of the offhand item", 
					completion=var_wrap+"ENTITYOFFHANDENCHANTMENTS"+var_wrap), 
				sublime.CompletionItem( #ENTITYBOOTSNAME
					trigger="ENTITYBOOTSNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the boots item", 
					completion=var_wrap+"ENTITYBOOTSNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYBOOTSID
					trigger="ENTITYBOOTSID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="ID of the boots item", 
					completion=var_wrap+"ENTITYBOOTSID"+var_wrap), 
				sublime.CompletionItem( #ENTITYBOOTSNID
					trigger="ENTITYBOOTSNID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Numerical ID of the boots item", 
					completion=var_wrap+"ENTITYBOOTSNID"+var_wrap), 
				sublime.CompletionItem( #ENTITYBOOTSDAMAGE
					trigger="ENTITYBOOTSDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the boots item", 
					completion=var_wrap+"ENTITYBOOTSDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYBOOTSCOUNT
					trigger="ENTITYBOOTSCOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the boots item", 
					completion=var_wrap+"ENTITYBOOTSCOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYBOOTSENCHANTMENTS
					trigger="ENTITYBOOTSENCHANTMENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Enchantments of the boots item", 
					completion=var_wrap+"ENTITYBOOTSENCHANTMENTS"+var_wrap), 
				sublime.CompletionItem( #ENTITYLEGGINGSNAME
					trigger="ENTITYLEGGINGSNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the leggings item", 
					completion=var_wrap+"ENTITYLEGGINGSNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYLEGGINGSID
					trigger="ENTITYLEGGINGSID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="ID of the leggings item", 
					completion=var_wrap+"ENTITYLEGGINGSID"+var_wrap), 
				sublime.CompletionItem( #ENTITYLEGGINGSNID
					trigger="ENTITYLEGGINGSNID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Numerical ID of the leggings item", 
					completion=var_wrap+"ENTITYLEGGINGSNID"+var_wrap), 
				sublime.CompletionItem( #ENTITYLEGGINGSDAMAGE
					trigger="ENTITYLEGGINGSDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the leggings item", 
					completion=var_wrap+"ENTITYLEGGINGSDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYLEGGINGSCOUNT
					trigger="ENTITYLEGGINGSCOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the leggings item", 
					completion=var_wrap+"ENTITYLEGGINGSCOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYLEGGINGSENCHANTMENTS
					trigger="ENTITYLEGGINGSENCHANTMENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Enchantments of the leggings item", 
					completion=var_wrap+"ENTITYLEGGINGSENCHANTMENTS"+var_wrap), 
				sublime.CompletionItem( #ENTITYCHESTPLATENAME
					trigger="ENTITYCHESTPLATENAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the chestplate item", 
					completion=var_wrap+"ENTITYCHESTPLATENAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYCHESTPLATEID
					trigger="ENTITYCHESTPLATEID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="ID of the chestplate item", 
					completion=var_wrap+"ENTITYCHESTPLATEID"+var_wrap), 
				sublime.CompletionItem( #ENTITYCHESTPLATENID
					trigger="ENTITYCHESTPLATENID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Numerical ID of the chestplate item", 
					completion=var_wrap+"ENTITYCHESTPLATENID"+var_wrap), 
				sublime.CompletionItem( #ENTITYCHESTPLATEDAMAGE
					trigger="ENTITYCHESTPLATEDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the chestplate item", 
					completion=var_wrap+"ENTITYCHESTPLATEDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYCHESTPLATECOUNT
					trigger="ENTITYCHESTPLATECOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the chestplate item", 
					completion=var_wrap+"ENTITYCHESTPLATECOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYCHESTPLATEENCHANTMENTS
					trigger="ENTITYCHESTPLATEENCHANTMENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Enchantments of the chestplate item", 
					completion=var_wrap+"ENTITYCHESTPLATEENCHANTMENTS"+var_wrap), 
				sublime.CompletionItem( #ENTITYHELMETNAME
					trigger="ENTITYHELMETNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Name of the helmet item", 
					completion=var_wrap+"ENTITYHELMETNAME"+var_wrap), 
				sublime.CompletionItem( #ENTITYHELMETID
					trigger="ENTITYHELMETID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="ID of the helmet item", 
					completion=var_wrap+"ENTITYHELMETID"+var_wrap), 
				sublime.CompletionItem( #ENTITYHELMETNID
					trigger="ENTITYHELMETNID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Numerical ID of the helmet item", 
					completion=var_wrap+"ENTITYHELMETNID"+var_wrap), 
				sublime.CompletionItem( #ENTITYHELMETDAMAGE
					trigger="ENTITYHELMETDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Damage of the helmet item", 
					completion=var_wrap+"ENTITYHELMETDAMAGE"+var_wrap), 
				sublime.CompletionItem( #ENTITYHELMETCOUNT
					trigger="ENTITYHELMETCOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Amount of the helmet item", 
					completion=var_wrap+"ENTITYHELMETCOUNT"+var_wrap), 
				sublime.CompletionItem( #ENTITYHELMETENCHANTMENTS
					trigger="ENTITYHELMETENCHANTMENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Enchantments of the helmet item", 
					completion=var_wrap+"ENTITYHELMETENCHANTMENTS"+var_wrap), 
				sublime.CompletionItem( #EHITX
					trigger="EHITX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="X value of entity your're looking at or 0 if not looking at an entity", 
					completion=var_wrap+"EHITX"+var_wrap), 
				sublime.CompletionItem( #EHITY
					trigger="EHITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Y value of entity your're looking at or 0 if not looking at an entity", 
					completion=var_wrap+"EHITY"+var_wrap), 
				sublime.CompletionItem( #EHITZ
					trigger="EHITZ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Entities Iterator Module)", 
					details="Z value of entity your're looking at or 0 if not looking at an entity", 
					completion=var_wrap+"EHITZ"+var_wrap), 

			# FarHit Module
				sublime.CompletionItem( #FARHIT
					trigger="FARHIT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HIT%", 
					completion=var_wrap+"FARHIT"+var_wrap), 
				sublime.CompletionItem( #FARHITID
					trigger="FARHITID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITID%", 
					completion=var_wrap+"FARHITID"+var_wrap), 
				sublime.CompletionItem( #FARHITDATA
					trigger="FARHITDATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITDATA%", 
					completion=var_wrap+"FARHITDATA"+var_wrap), 
				sublime.CompletionItem( #FARHITNAME
					trigger="FARHITNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITNAME%", 
					completion=var_wrap+"FARHITNAME"+var_wrap), 
				sublime.CompletionItem( #FARHITSIDE
					trigger="FARHITSIDE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITSIDE%", 
					completion=var_wrap+"FARHITSIDE"+var_wrap), 
				sublime.CompletionItem( #FARHITX
					trigger="FARHITX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITX%", 
					completion=var_wrap+"FARHITX"+var_wrap), 
				sublime.CompletionItem( #FARHITY
					trigger="FARHITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITY%", 
					completion=var_wrap+"FARHITY"+var_wrap), 
				sublime.CompletionItem( #FARHITZ
					trigger="FARHITZ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITZ%", 
					completion=var_wrap+"FARHITZ"+var_wrap), 
				sublime.CompletionItem( #FARHITUUID
					trigger="FARHITUUID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITUUID%", 
					completion=var_wrap+"FARHITUUID"+var_wrap), 
				sublime.CompletionItem( #FARHITDIST
					trigger="FARHITDIST", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Extended reach %HITDIST%", 
					completion=var_wrap+"FARHITDIST"+var_wrap), 
				sublime.CompletionItem( #MODULEFARHIT
					trigger="MODULEFARHIT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(FarHit Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEFARHIT"+var_wrap), 

			# Functions Module
				sublime.CompletionItem( #function
					trigger="function", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Functions Module)", 
					details="Define a function", 
					completion=case("function")+" ${1:<functionname>}"+args("${2:[...parameters]}")+semicolon+"\n\t$3\n"+case("endfunction")+semicolon), 
				sublime.CompletionItem( #return
					trigger="return", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Functions Module)", 
					details="Returns a value inside of a function", 
					completion=case("return")+args("${1:<value>}")+semicolon), 
				sublime.CompletionItem( #call
					trigger="call", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Functions Module)", 
					details="Calling functions", 
					completion="${1:[value]} = "+case("call")+args("${2:<functionname>},${3:[...parameters]}")+semicolon), 
				sublime.CompletionItem( #call2
					trigger="call2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Functions Module)", 
					details="Alternative way of calling functions", 
					completion="${1:[value]} = "+"${2:<functionname>}"+args("${3:[...parameters]}")+semicolon), 
				sublime.CompletionItem( #FUNCTIONNAME
					trigger="FUNCTIONNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Functions Module)", 
					details="Name of function that is being iterated", 
					completion=var_wrap+"FUNCTIONNAME"+var_wrap), 
				sublime.CompletionItem( #functions
					trigger="functions", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Functions Module)", 
					details="Iterates over all functions", 
					completion=case("functions")), 
				sublime.CompletionItem( #MODULEFUNCTIONS
					trigger="MODULEFUNCTIONS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Functions Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEFUNCTIONS"+var_wrap), 

			# GetSlotItemExtended Module
				sublime.CompletionItem( #getslotitemext
					trigger="getslotitemext", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(GetSlotItemExtended Module)", 
					details="+ Argument for the itemname of item", 
					completion=optional("${2:&${1:[itemid]} = }")+case("getslotitemext")+args("#${3:<slotid>},&${1:[itemid]},${4:[stacksize]},${5:[damage]},${6:[itemname]}")+semicolon), 
				sublime.CompletionItem( #getslotitemnbt
					trigger="getslotitemnbt", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(GetSlotItemExtended Module)", 
					details="+ Argument for the nbt of item", 
					completion=optional("${2:&${1:[itemid]} = }")+case("getslotitemnbt")+args("#${3:<slotid>},${1:[itemid]},${4:[stacksize]},${5:[damage]},${6:[nbt]}")+semicolon), 
				sublime.CompletionItem( #getslotitemenchants
					trigger="getslotitemenchants", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(GetSlotItemExtended Module)", 
					details="+ Argument for enchantments", 
					completion=optional("${2:&${1:[itemid]} = }")+case("getslotitemenchants")+args("#${3:<slotid>},${1:[itemid]},${4:[stacksize]},${5:[damage]},${6:[enchants]}")+semicolon), 
				sublime.CompletionItem( #MODULEGETSLOTITEMEXT
					trigger="MODULEGETSLOTITEMEXT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(GetSlotItemExtended Module)", 
					details="Returns true if the module is installed", 
					completion="MODULEGETSLOTITEMEXT"), 

			# HTTP Module
				sublime.CompletionItem( #httpget
					trigger="httpget", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(HTTP Module)", 
					details="Httpget request to url", 
					completion="${2:&${1:[response]}[] = }"+case("httpget")+args("${3:<url>},${4:<query>},#${5:<status>},&${1:[response]}")+semicolon), 
				sublime.CompletionItem( #httppost
					trigger="httppost", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(HTTP Module)", 
					details="Httppost request to url with data", 
					completion="${2:&${1:[response]}[] = }"+case("httppost")+args("${3:<url>},${4:<data>},#${5:<status>},&${1:[response]}")+semicolon), 
				sublime.CompletionItem( #httpput
					trigger="httpput", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(HTTP Module)", 
					details="Httpput request to url with data", 
					completion="${2:&${1:[response]}[] = }"+case("httpput")+args("${3:<url>},${4:<data>},#${5:<status>},&${1:[response]}")+semicolon), 
				sublime.CompletionItem( #httpdelete
					trigger="httpdelete", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(HTTP Module)", 
					details="Request to specified url", 
					completion="${2:&${1:[response]}[] = }"+case("httpdelete")+args("${3:<url>},${4:<query>},#${5:<status>},&${1:[response]}")+semicolon), 
				sublime.CompletionItem( #urlencode
					trigger="urlencode", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(HTTP Module)", 
					details="Url encodes the string", 
					completion="${2:&${1:[output]} = }"+case("urlencode")+args("${3:<string>},&${1:[output]}")+semicolon), 
				sublime.CompletionItem( #setrequestheader
					trigger="setrequestheader", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(HTTP Module)", 
					details="Sets header for next request", 
					completion=case("setrequestheader")+args("&${1:<field>},&${2:<value>}")+semicolon), 
				sublime.CompletionItem( #MODULEHTTP
					trigger="MODULEHTTP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(HTTP Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEHTTP"+var_wrap), 

			# JSON Module
				sublime.CompletionItem( #isboolean
					trigger="isboolean", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is a boolean", 
					completion="${2:[${1:bool}] = }"+case("isboolean")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #isfloat
					trigger="isfloat", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is a float", 
					completion="${2:${1:[bool]} = }"+case("isfloat")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #isinteger
					trigger="isinteger", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is an integer", 
					completion="${2:${1:[bool]} = }"+case("isinteger")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #isjsonarray
					trigger="isjsonarray", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is a json array", 
					completion="${2:${1:[bool]} = }"+case("isjsonarray")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #isjsonobject
					trigger="isjsonobject", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is a json object", 
					completion="${2:${1:[bool]} = }"+case("isjsonobject")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #isjsonprimitive
					trigger="isjsonprimitive", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if value isjson primitive", 
					completion="${2:${1:[bool]} = }"+case("isjsonprimitive")+args("${3:<string>}${1:,[bool}]")+semicolon), 
				sublime.CompletionItem( #isnumber
					trigger="isnumber", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is a number", 
					completion="${2:${1:[bool]} = }"+case("isnumber")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #isstring
					trigger="isstring", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Checks if the value is a string", 
					completion="${2:${1:[bool]} = }"+case("isstring")+args("${3:<string>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #jsonadd
					trigger="jsonadd", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Adds key and value to the json", 
					completion="${2:&${1:[output]} = }"+case("jsonadd")+args("${3:<json>},${4:<key>},${5:<value>},&${1:[output]}")+semicolon), 
				sublime.CompletionItem( #jsonget
					trigger="jsonget", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Gets value of a key", 
					completion="${2:&${1:[output]} = }"+case("jsonget")+args("${3:<json>},${4:<key>},&${1:[output]}")+semicolon), 
				sublime.CompletionItem( #jsonhas
					trigger="jsonhas", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Returns if the json contains the key", 
					completion="${2:${1:[bool]} = }"+case("jsonhas")+args("${3:<json>},${4:<key>},${1:[bool]}")+semicolon), 
				sublime.CompletionItem( #jsonremove
					trigger="jsonremove", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Removes a key-value-pair from the json", 
					completion="${2:&${1:[output]} = }"+case("jsonremove")+args("${3:<json>},${4:<key>},&${1:[output]}")+semicolon), 
				sublime.CompletionItem( #getjsonkeys
					trigger="getjsonkeys", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Returns list of all keys of the json", 
					completion="${2:&${1:[keys]} = }"+case("getjsonkeys")+args("${3:<json>},&${1:[keys]}[]")+semicolon), 
				sublime.CompletionItem( #getjsonarray
					trigger="getjsonarray", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Returns json as key:value array", 
					completion=optional("${2:&${1:[array]} = }")+case("getjsonasarray")+args("${3:<json>},${1:[array]}[]")+semicolon), 
				sublime.CompletionItem( #jsonarrayadd
					trigger="jsonarrayadd", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Adds an element to the json array", 
					completion="${2:&${1:[jsonarray]} = }"+case("jsonarrayadd")+args("${3:<jsonarray>},${4:<element>},&${1:[jsonarray]}")+semicolon), 
				sublime.CompletionItem( #jsonarrayget
					trigger="jsonarrayget", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Returns the element of the jsonarray", 
					completion="${2:&${1:[output]} = }"+case("jsonarrayget")+args("${3:<jsonarray>},${4:<index>},&${1:[output]}")+semicolon), 
				sublime.CompletionItem( #jsonarraysize
					trigger="jsonarraysize", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(JSON Module)", 
					details="Returns the size of the jsonarray", 
					completion="${2:#${1:[size]} = }"+case("jsonarraysize")+args("${3:<jsonarray>},#${1:[size]}")+semicolon), 
				sublime.CompletionItem( #MODULEJSON
					trigger="MODULEJSON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(JSON Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULEJSON"+var_wrap), 

			# Klacaiba Module
				sublime.CompletionItem( #calcyawto
					trigger="calcyawto", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="+ Y argument for pitch", 
					completion=case("calcyawto")+args("${1:<xpos>},${2:<ypos>},${3:<zpos>},#${4:[yaw]},#${5:[dist]},#${6:[pitch]}")+semicolon), 
				sublime.CompletionItem( #getslotitem
					trigger="getslotitem", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="+ Nbt argument", 
					completion=case("getslotitem")+args("${1:<slotid>},&${2:<itemid>},#${3:[stacksize]},#${4:[datavar]},&${5:[nbt]}")+semicolon), 
				sublime.CompletionItem( #http
					trigger="http", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Creates a http request", 
					completion=optional("&${1:response} = ")+case("http")+args("${2:[get|post|put|delete]},${3:<url>},${4:[output stream]},${5:[headers]}")+semicolon), 
				sublime.CompletionItem( #mkdir
					trigger="mkdir", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Creates directory", 
					completion=case("mkdir")+args("${1:<path>}")+semicolon), 
				sublime.CompletionItem( #readfile
					trigger="readfile", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Reads file into array, files can start with ~ to be relative to minecraft directory", 
					completion=optional("${2:&${1:<content>}[] = }")+case("readfile")+args("&${1:[content]}[],${3:<path>}")+semicolon), 
				sublime.CompletionItem( #writefile
					trigger="writefile", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Writes array to file", 
					completion=case("writefile")+args("${1:<path>},&${2:<writefile>}[],${3:[append]}")+semicolon), 
				sublime.CompletionItem( #getjsonasarray
					trigger="getjsonasarray", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns json as key:value array", 
					completion=optional("&${1:array}[] = ")+case("getjsonasarray")+args("${2:<json>},${3:[format]}")+semicolon), 
				sublime.CompletionItem( #getjsonkeys
					trigger="getjsonkeys", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Retuns list of the keys of json", 
					completion=optional("&${1:keys}[] = ")+case("getjsonkeys")+args("${2:<json>}")+semicolon), 
				sublime.CompletionItem( #jsonget
					trigger="jsonget", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Retuns object of key of specified json", 
					completion=optional("&${1:object} = ")+case("jsonget")+args("${2:<json>},${3:<key>}")+semicolon), 
				sublime.CompletionItem( #sort
					trigger="sort", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Sorts the arrays synchronously", 
					completion=case("sort")+args("${1:[asc,dsc]},${2:<array>}[],${3:[array]}[]")+semicolon), 
				sublime.CompletionItem( #teammembers
					trigger="teammembers", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Lists scoreboard team members", 
					completion=optional("&${1:<members/teams>}[] = ")+case("teammembers")+args("${2:[team]}")+semicolon), 
				sublime.CompletionItem( #score
					trigger="score", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns score of player in objective", 
					completion=optional("<${1:&score|&scores[]|&obectives[]}> = ")+case("score")+args("${2:[objectivename]},${3:[playername]}")+semicolon), 
				sublime.CompletionItem( #countdownto
					trigger="countdownto", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Countdown to the specified datetime", 
					completion=case("countdownto")+args("${1:<until>}")+semicolon), 
				sublime.CompletionItem( #countdownfrom
					trigger="countdownfrom", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Countdown from the specified time", 
					completion=case("countdownfrom")+args("${1:<start>}")+semicolon), 
				sublime.CompletionItem( #countup
					trigger="countup", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Creates a countup from the current time", 
					completion=case("countup")+args("")+semicolon), 
				sublime.CompletionItem( #counter
					trigger="counter", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Current value of the countdown or countup", 
					completion=case("counter")+args("${1:<id>}")+semicolon), 
				sublime.CompletionItem( #sectotime
					trigger="sectotime", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Formats the amount of seconds to time", 
					completion=optional("&${1:time} = ")+case("sectotime")+args("${2:<seconds>},${3:[format]}")+semicolon), 
				sublime.CompletionItem( #getchestname
					trigger="getchestname", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns the name of the open chest", 
					completion=optional("&${1:name} = ")+case("getchestname")+args("")+semicolon), 
				sublime.CompletionItem( #getemptyslots
					trigger="getemptyslots", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns empty slots in inventory", 
					completion=optional("#${1:slots} = ")+case("getemptyslots")+args("${2:[include non full slots]}")+semicolon), 
				sublime.CompletionItem( #getmouseitem
					trigger="getmouseitem", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Gets info about the held item", 
					completion=optional("${2:&${1:[id]} = }")+case("getmouseitem")+args("&${1:[id]},#${3:[stacksizevar]},#${4:[datavar]},&${5:[nbt]}")+semicolon), 
				sublime.CompletionItem( #getslotiteminv
					trigger="getslotiteminv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Gets information about the item in the specified slot", 
					completion=optional("${2:[&${1:<id>}] = }")+case("getslotiteminv")+args("${3:<slotid>},&${1:<id>},#${4:[stacksizevar]},#${5:[datavar]},&${6:[nbt]}")+semicolon), 
				sublime.CompletionItem( #getslotinv
					trigger="getslotinv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Gets slot containing item in inventory", 
					completion=optional("#${1:[slot]} = ")+case("getslotinv")+args("${2:<item>}:${3:[damage]},#${4:<idvar>},${5:[startfromslotid]}")+semicolon), 
				sublime.CompletionItem( #setslotitem
					trigger="setslotitem", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Set the contents of a hotbar slot", 
					completion=case("setslotitem")+args("${1:<item>}:${2:[damage]}${3:,<slot>},${4:[amount]},${5:[nbt]}")+semicolon), 
				sublime.CompletionItem( #getfishhook
					trigger="getfishhook", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Get the x, y and z (3dp) of the bobber", 
					completion=optional("${2:#${1:[ytotal]} = }")+case("getfishhook")+args("#${3:[x]},#${4:[xprecision]},#${5:[y]},#${6:[yprecision]},#${7:[z]},#${8:[zprecision]}")+semicolon), 
				sublime.CompletionItem( #map
					trigger="map", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Maps the value x from minfrom-maxfrom to minto-maxto", 
					completion=optional("#${1:result} = ")+case("map")+args("${2:<x>},${3:<minfrom>},${4:<maxfrom>},${5:<minto>},${6:<maxto>}")+semicolon), 
				sublime.CompletionItem( #particle
					trigger="particle", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Spawns particles similar to the vanilla command", 
					completion=optional("${2:&${1:errors}[] = }")+case("particle")+args("${3:<particlename>},${4:<x>},${5:<y>},${6:<z>},${7:<dx>},${8:<dy>},${9:<dz>},${10:[count]},${11:[mode]}")+semicolon), 
				sublime.CompletionItem( #countitem
					trigger="countitem", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Amount of items in your current inventory", 
					completion=optional("#${1:count} = ")+case("countitem")+args("${2:<item>}:${3:[damage]}")+semicolon), 
				sublime.CompletionItem( #countiteminv
					trigger="countiteminv", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Amount of items in your survival inventory", 
					completion=optional("#${1:count} = ")+case("countiteminv")+args("${2:<item>}:${3:[damage]}")+semicolon), 
				sublime.CompletionItem( #createcontrol
					trigger="createcontrol", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Creates a control on the specified screen at row and column position", 
					completion=optional("${2:[&${1:controlname}] = }")+case("createcontrol")+args("${3:<screenname|layouts|types>},${4:[element type]},${5:[row]},${6:[column]}")+semicolon), 
				sublime.CompletionItem( #deletecontrol
					trigger="deletecontrol", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Deletes a control by name from any gui", 
					completion=case("deletecontrol")+args("${1:<controlname>}")+semicolon), 
				sublime.CompletionItem( #timestamptodate
					trigger="timestamptodate", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Format a timestamp in seconds", 
					completion=optional("&${1:date} = ")+case("timestamptodate")+args("${2:<timestamp>},${3:[in milliseconds|date format]},${4:[in milliseconds]}")+semicolon), 
				sublime.CompletionItem( #stop
					trigger="stop", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Stops macro matching regex or array", 
					completion=case("stop")+args("${1:[array|regex]}")+semicolon), 
				sublime.CompletionItem( #strlen
					trigger="strlen", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns the length of the string or 0 if none is present", 
					completion=optional("#${1:length} = ")+case("strlen")+args("${2:<string>}")+semicolon), 
				sublime.CompletionItem( #getbreakspeed
					trigger="getbreakspeed", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns the amount of time required to break a block or 0 if infinite of none specified", 
					completion=optional("#${1:ticks} = ")+case("getbreakspeed")+args("${2:<blockid>}")+semicolon), 
				sublime.CompletionItem( #pollevent
					trigger="pollevent", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation="(Klacaiba Module)", 
					details="Opens a stack with an infinite iterator for a specific event", 
					completion=case("pollevent")+args("${1:[event]}")+semicolon+"\n\t$2\n\t"+case("await")+semicolon+"\n"+case("next")+semicolon), 
				sublime.CompletionItem( #POLLALL
					trigger="POLLALL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="List all variables of the event", 
					completion=var_wrap+"POLLALL"+var_wrap), 
				sublime.CompletionItem( #await
					trigger="await", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Should be placed above the closing next of a pollevent", 
					completion=case("await")+semicolon), 
				sublime.CompletionItem( #await
					trigger="await", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Should be placed above the closing next of a pollevent", 
					completion=case("await")+semicolon), 
				sublime.CompletionItem( #char
					trigger="char", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="(Char) Returns the character of the character expression", 
					completion=optional("${2:&${1:<result>} = }")+case("char")+args("&${1:<result>},&${3:<char expression>}")+semicolon), 
				sublime.CompletionItem( #char
					trigger="char", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="(Array) Returns the characters of the character expressiond", 
					completion=optional("${2:&${1:<result>} = }")+case("char")+args("&${1:<result>},&${3:<char expression>}")+semicolon), 
				sublime.CompletionItem( #unix
					trigger="unix", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Gets the current time with milliseconds", 
					completion=case("unix")+args("#${1:[seconds]},#${2:<milliseconds>}")+semicolon), 
				sublime.CompletionItem( #MODULENEI
					trigger="MODULENEI", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULENEI"+var_wrap), 

			# Klacaiba variables
				sublime.CompletionItem( #LATENCY
					trigger="LATENCY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="Ping of the player to the server", 
					completion=var_wrap+"LATENCY"+var_wrap), 
				sublime.CompletionItem( #HACKED
					trigger="HACKED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="Whether all the functions of the module have been applied to the client", 
					completion=var_wrap+"HACKED"+var_wrap), 
				sublime.CompletionItem( #MINECRAFTDIR
					trigger="MINECRAFTDIR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="Filepath of the current minecraft directory", 
					completion=var_wrap+"MINECRAFTDIR"+var_wrap), 
				sublime.CompletionItem( #MACROSCONFIGDIR
					trigger="MACROSCONFIGDIR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="%MINECRAFTDIR%/.liteconfig/common/macros", 
					completion=var_wrap+"MACROSCONFIGDIR"+var_wrap), 
				sublime.CompletionItem( #FILESEPERATOR
					trigger="FILESEPERATOR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="Default path seperator used by the system", 
					completion=var_wrap+"FILESEPERATOR"+var_wrap), 
				sublime.CompletionItem( #KLACAIBAVERSION
					trigger="KLACAIBAVERSION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module)", 
					details="Returns the version of klacaiba", 
					completion=var_wrap+"KLACAIBAVERSION"+var_wrap), 

			# Klacaiba players iterator
				sublime.CompletionItem( #players
					trigger="players", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module - players iterator)", 
					details="Iterates over all online players", 
					completion=case("players")), 
				sublime.CompletionItem( #PLAYERUUID
					trigger="PLAYERUUID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - players iterator)", 
					details="UUID of the player with dashes", 
					completion=var_wrap+"PLAYERUUID"+var_wrap), 
				sublime.CompletionItem( #PLAYERDISPLAYNAME
					trigger="PLAYERDISPLAYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - players iterator)", 
					details="Displayname of the player", 
					completion=var_wrap+"PLAYERDISPLAYNAME"+var_wrap), 
				sublime.CompletionItem( #PLAYERTEAM
					trigger="PLAYERTEAM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - players iterator)", 
					details="Scoreboard team of the player as JSON", 
					completion=var_wrap+"PLAYERTEAM"+var_wrap), 
				sublime.CompletionItem( #PLAYERPING
					trigger="PLAYERPING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - players iterator)", 
					details="Ping of the player", 
					completion=var_wrap+"PLAYERPING"+var_wrap), 
				sublime.CompletionItem( #PLAYERISLEGACY
					trigger="PLAYERISLEGACY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - players iterator)", 
					details="Whether the player uses a legacy account", 
					completion=var_wrap+"PLAYERISLEGACY"+var_wrap), 

			# Klacaiba teams iterator
				sublime.CompletionItem( #teams
					trigger="teams", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Iterates over all teams", 
					completion=case("teams")), 
				sublime.CompletionItem( #TEAMALLOWFRIENDLYFIRE
					trigger="TEAMALLOWFRIENDLYFIRE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="If the team allows friendly fire", 
					completion=var_wrap+"TEAMALLOWFRIENDLYFIRE"+var_wrap), 
				sublime.CompletionItem( #TEAMCOLLISIONRULE
					trigger="TEAMCOLLISIONRULE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Collisionrule of the team", 
					completion=var_wrap+"TEAMCOLLISIONRULE"+var_wrap), 
				sublime.CompletionItem( #TEAMCOLOR
					trigger="TEAMCOLOR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Color of the team", 
					completion=var_wrap+"TEAMCOLOR"+var_wrap), 
				sublime.CompletionItem( #TEAMDEATHMESSAGEVISIBILITY
					trigger="TEAMDEATHMESSAGEVISIBILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Deathmessage visibility ruleing of the team", 
					completion=var_wrap+"TEAMDEATHMESSAGEVISIBILITY"+var_wrap), 
				sublime.CompletionItem( #TEAMDISPLAYNAME
					trigger="TEAMDISPLAYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Displayname of the team", 
					completion=var_wrap+"TEAMDISPLAYNAME"+var_wrap), 
				sublime.CompletionItem( #TEAMNAME
					trigger="TEAMNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Name of the team", 
					completion=var_wrap+"TEAMNAME"+var_wrap), 
				sublime.CompletionItem( #TEAMNAMETAGVISIBILITY
					trigger="TEAMNAMETAGVISIBILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Nametag visibility of the team", 
					completion=var_wrap+"TEAMNAMETAGVISIBILITY"+var_wrap), 
				sublime.CompletionItem( #TEAMSEEFRIENDLYINVISIBLES
					trigger="TEAMSEEFRIENDLYINVISIBLES", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Whether the team can see friendly invisibles", 
					completion=var_wrap+"TEAMSEEFRIENDLYINVISIBLES"+var_wrap), 
				sublime.CompletionItem( #TEAMPREFIX
					trigger="TEAMPREFIX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Prefix of the team", 
					completion=var_wrap+"TEAMPREFIX"+var_wrap), 
				sublime.CompletionItem( #TEAMSUFFIX
					trigger="TEAMSUFFIX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Suffix of the team", 
					completion=var_wrap+"TEAMSUFFIX"+var_wrap), 
				sublime.CompletionItem( #TEAMMEMBERS
					trigger="TEAMMEMBERS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - teams iterator)", 
					details="Membernames of the team", 
					completion=var_wrap+"TEAMMEMBERS"+var_wrap), 

			# Klacaiba objective iterator
				sublime.CompletionItem( #objectives
					trigger="objectives", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module - objectives iterator)", 
					details="Iterates over all objectives", 
					completion=case("objectives")), 
				sublime.CompletionItem( #OBJECTIVECRITERIA
					trigger="OBJECTIVECRITERIA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - objectives iterator)", 
					details="Criteria of the objective", 
					completion=var_wrap+"OBJECTIVECRITERIA"+var_wrap), 
				sublime.CompletionItem( #OBJECTIVEDISPLAYNAME
					trigger="OBJECTIVEDISPLAYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - objectives iterator)", 
					details="Displayname of the objective", 
					completion=var_wrap+"OBJECTIVEDISPLAYNAME"+var_wrap), 
				sublime.CompletionItem( #OBJECTIVENAME
					trigger="OBJECTIVENAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - objectives iterator)", 
					details="Name of the objective", 
					completion=var_wrap+"OBJECTIVENAME"+var_wrap), 
				sublime.CompletionItem( #OBJECTIVERENDERTYPE
					trigger="OBJECTIVERENDERTYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - objectives iterator)", 
					details="Rendertype of the objective", 
					completion=var_wrap+"OBJECTIVERENDERTYPE"+var_wrap), 

			# Klacaiba score iterator
				sublime.CompletionItem( #scores
					trigger="scores", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module - score iterator)", 
					details="Iterates over all scores", 
					completion=case("scores")), 
				sublime.CompletionItem( #SCOREOBJECTIVENAME
					trigger="SCOREOBJECTIVENAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - scores iterator)", 
					details="Name of the associated objective", 
					completion=var_wrap+"SCOREOBJECTIVENAME"+var_wrap), 
				sublime.CompletionItem( #SCOREPLAYERNAME
					trigger="SCOREPLAYERNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - scores iterator)", 
					details="Name of the owning player", 
					completion=var_wrap+"SCOREPLAYERNAME"+var_wrap), 
				sublime.CompletionItem( #SCOREVALUE
					trigger="SCOREVALUE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - scores iterator)", 
					details="Value of the score", 
					completion=var_wrap+"SCOREVALUE"+var_wrap), 

			# Klacaiba trades iterator
				sublime.CompletionItem( #trades
					trigger="trades", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="Iterates over all trades", 
					completion=case("trades")), 
				sublime.CompletionItem( #TRADEBUYITEM
					trigger="TRADEBUYITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADEBUYITEM"+var_wrap), 
				sublime.CompletionItem( #TRADEBUYITEMAMOUNT
					trigger="TRADEBUYITEMAMOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADEBUYITEMAMOUNT"+var_wrap), 
				sublime.CompletionItem( #TRADEBUYITEM2
					trigger="TRADEBUYITEM2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADEBUYITEM2"+var_wrap), 
				sublime.CompletionItem( #TRADEBUYITEM2AMOUNT
					trigger="TRADEBUYITEM2AMOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADEBUYITEM2AMOUNT"+var_wrap), 
				sublime.CompletionItem( #TRADESELLITEM
					trigger="TRADESELLITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADESELLITEM"+var_wrap), 
				sublime.CompletionItem( #TRADESELLITEMAMOUNT
					trigger="TRADESELLITEMAMOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADESELLITEMAMOUNT"+var_wrap), 
				sublime.CompletionItem( #TRADEUSES
					trigger="TRADEUSES", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADEUSES"+var_wrap), 
				sublime.CompletionItem( #TRADEMAXUSES
					trigger="TRADEMAXUSES", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - trades iterator)", 
					details="", 
					completion=var_wrap+"TRADEMAXUSES"+var_wrap), 

			# Klacaiba inventory iterator
				sublime.CompletionItem( #inventory
					trigger="inventory", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module - inventory iterator)", 
					details="Iterates over your inventory", 
					completion=case("inventory")), 
				sublime.CompletionItem( #SLOTINDEX
					trigger="SLOTINDEX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - inventory iterator)", 
					details="current index of slot", 
					completion=var_wrap+"SLOTINDEX"+var_wrap), 
				sublime.CompletionItem( #SLOTID
					trigger="SLOTID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - inventory iterator)", 
					details="current id of slot", 
					completion=var_wrap+"SLOTID"+var_wrap), 
				sublime.CompletionItem( #SLOTSTACKSIZE
					trigger="SLOTSTACKSIZE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - inventory iterator)", 
					details="current stacksize of slot", 
					completion=var_wrap+"SLOTSTACKSIZE"+var_wrap), 
				sublime.CompletionItem( #SLOTDATAVAR
					trigger="SLOTDATAVAR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - inventory iterator)", 
					details="current datavar of slot", 
					completion=var_wrap+"SLOTDATAVAR"+var_wrap), 
				sublime.CompletionItem( #SLOTTAG
					trigger="SLOTTAG", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - inventory iterator)", 
					details="current tag of slot", 
					completion=var_wrap+"SLOTTAG"+var_wrap), 

			# Klacaiba onSound event
				sublime.CompletionItem( #SOUNDXPOSF
					trigger="SOUNDXPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="XPOS of sound as float", 
					completion=var_wrap+"SOUNDXPOSF"+var_wrap), 
				sublime.CompletionItem( #SOUNDYPOSF
					trigger="SOUNDYPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="YPOS of sound as float", 
					completion=var_wrap+"SOUNDYPOSF"+var_wrap), 
				sublime.CompletionItem( #SOUNDZPOSF
					trigger="SOUNDZPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="ZPOS of sound as float", 
					completion=var_wrap+"SOUNDZPOSF"+var_wrap), 
				sublime.CompletionItem( #SOUNDXPOS
					trigger="SOUNDXPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="XPOS of sound as int", 
					completion=var_wrap+"SOUNDXPOS"+var_wrap), 
				sublime.CompletionItem( #SOUNDYPOS
					trigger="SOUNDYPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="YPOS of sound as int", 
					completion=var_wrap+"SOUNDYPOS"+var_wrap), 
				sublime.CompletionItem( #SOUNDZPOS
					trigger="SOUNDZPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="ZPOS of sound as int", 
					completion=var_wrap+"SOUNDZPOS"+var_wrap), 
				sublime.CompletionItem( #SOUNDCANREPEAT
					trigger="SOUNDCANREPEAT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="Whether the sound is able to repeat", 
					completion=var_wrap+"SOUNDCANREPEAT"+var_wrap), 
				sublime.CompletionItem( #SOUNDATTENUATIONTYPE
					trigger="SOUNDATTENUATIONTYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="Type of attenuation", 
					completion=var_wrap+"SOUNDATTENUATIONTYPE"+var_wrap), 
				sublime.CompletionItem( #SOUNDCATEGORY
					trigger="SOUNDCATEGORY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="Category of sound", 
					completion=var_wrap+"SOUNDCATEGORY"+var_wrap), 
				sublime.CompletionItem( #SOUNDPITCH
					trigger="SOUNDPITCH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="Pitch of the sound as float", 
					completion=var_wrap+"SOUNDPITCH"+var_wrap), 
				sublime.CompletionItem( #SOUNDVOLUME
					trigger="SOUNDVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="Volume of the sound as float", 
					completion=var_wrap+"SOUNDVOLUME"+var_wrap), 
				sublime.CompletionItem( #SOUNDRESOURCE
					trigger="SOUNDRESOURCE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Klacaiba Module - onSound event)", 
					details="Resourcepath of the sound", 
					completion=var_wrap+"SOUNDRESOURCE"+var_wrap), 

			# Macro Modules Essential
				sublime.CompletionItem( #getslotnbt
					trigger="getslotnbt", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Macro Modules Essential)", 
					details="Get nbt of item in slot", 
					completion=case("getslotnbt")+args("${1:<slotid>},${2:<path>},&${3:[itemId]},#${4:[stackSize]},#${5:[damage]}")+semicolon), 
				sublime.CompletionItem( #pressbutton
					trigger="pressbutton", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Macro Modules Essential)", 
					details="Press button", 
					completion=case("pressbutton")+args("${1:<buttonid>},${2:[button]}")+semicolon), 
				sublime.CompletionItem( #getprop
					trigger="getprop", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Macro Modules Essential)", 
					details="gets property of block at coordinates", 
					completion=case("getprop")+args("${1:<x>},${2:<y>},${3:<z>},${4:<propname>},#${5:[propvar]}")+semicolon), 
				sublime.CompletionItem( #slotmiddleclick
					trigger="slotmiddleclick", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Macro Modules Essential)", 
					details="middle click inventory slot", 
					completion=case("slotmiddleclick")+args("${1:<slotid>}")+semicolon), 

			# Reconnect Module
				sublime.CompletionItem( #reconnect
					trigger="reconnect", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Reconnect Module)", 
					details="Auto reconnects to a server", 
					completion=case("reconnect")+args("${1:<on|off|10-300>}")+semicolon), 
				sublime.CompletionItem( #RECONNECT
					trigger="RECONNECT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Reconnect Module)", 
					details="Whether or not auto reconnect is enabled", 
					completion=var_wrap+"RECONNECT"+var_wrap), 

			# scaneUtils Module
				sublime.CompletionItem( #getdensity
					trigger="getdensity", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(scaneUtils Module)", 
					details="Searches for sugarcane in the given direction", 
					completion=case("getdensity")+args("${1:[N/E/S/W]},#${2:<limit_search>},&${3:<initial_position>},#${4:<blocks_searched>},#${5:<sugarcane_found>}")+semicolon), 
				sublime.CompletionItem( #getitemstacksize
					trigger="getitemstacksize", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(scaneUtils Module)", 
					details="Searches the inventory, returns the stacksize", 
					completion=optional("#${1:stacksize} = ")+case("getitemstacksize")+args("&${2:<item_name>},#${3:[limit_search]}")+semicolon), 
				sublime.CompletionItem( #getpercentage
					trigger="getpercentage", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(scaneUtils Module)", 
					details="Does first divided by second times 100", 
					completion=case("getpercentage")+args("#${1:[percentage]},#${2:<first>},#${3:<second>}")+semicolon), 
				sublime.CompletionItem( #getslotpositions
					trigger="getslotpositions", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(scaneUtils Module)", 
					details="Searches the inventory, returns the position", 
					completion=case("getslotpositions")+args("&${1:<item_name>},#${2:<result_position>},#${3:[result_stacksize]}")+semicolon), 

			# SignText Module
				sublime.CompletionItem( #gethitsigntext
					trigger="gethitsigntext", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(SignText Module)", 
					details="Returns signtext of hit sign", 
					completion=optional("${2:&${1:[outarray]}[] = }")+case("gethitsigntext")+args("&${1:[outarray]}[]")+semicolon), 
				sublime.CompletionItem( #getsigntext
					trigger="getsigntext", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(SignText Module)", 
					details="Returns signtext at coordinates", 
					completion=optional("${2:&${1:[outarray]} = }")+case("getsigntext")+args("${3:<x>},${4:<y>},${5:<z>},&${1:[outarray]}")+semicolon), 
				sublime.CompletionItem( #setsigntext
					trigger="setsigntext", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(SignText Module)", 
					details="Set text of sign in SP", 
					completion=case("setsigntext")+args("${1:<x>},${2:<y>}${3:,<z>},${4:<line1>},${5:<line2>},${6:<line3>},${7:<line4>}")+semicolon), 
				sublime.CompletionItem( #MODULESIGNTEXT
					trigger="MODULESIGNTEXT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(SignText Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"MODULESIGNTEXT"+var_wrap), 

			# Switch Module
				sublime.CompletionItem( #switch
					trigger="switch", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_SNIPPET, 
					annotation=case("switch")+"…"+case("case")+"…"+case("default")+"…"+case("endcase")+" (Switch Case Module)", 
					details="Switch case statement", 
					completion=case("switch")+args("${1:<expression>}")+semicolon+"\n\t"+case("case")+args("${2:<value>}","$2")+semicolon+"\n\t\t$3\n\t"+case("default")+semicolon+"\n\t\t$4\n"+case("endswitch")+semicolon), 
				sublime.CompletionItem( #case
					trigger="case", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Switch Case Module)", 
					details="case statement", 
					completion=case("case")+args("${1:<value>}")+semicolon+"\n\t"), 

			# Utilities Module
				sublime.CompletionItem( #eval
					trigger="eval", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utilities Module)", 
					details="Evaluates an expression", 
					completion=optional("${2:&${1:[result]} = }")+case("eval")+args("&${1:[result]},${3:<expression string>}")+semicolon), 
				sublime.CompletionItem( #char
					trigger="char", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utilities Module)", 
					details="Puts set unicode value into &char", 
					completion=case("char")+args("&${1:<char>},${2:<decimal unicode value>}")+semicolon), 
				sublime.CompletionItem( #mod
					trigger="mod", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utilities Module)", 
					details="Evaluates num1 modulo num2", 
					completion=case("mod")+args("#${1:<result>},${2:<num1>},${3:<num2>}")+semicolon), 
				sublime.CompletionItem( #oldname
					trigger="oldname", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utilities Module)", 
					details="Gets the past names of a user", 
					completion=case("oldname")+args("&${1:<names>}[],${2:<username>}")+semicolon), 
				sublime.CompletionItem( #readfile
					trigger="readfile", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utilities Module)", 
					details="Gets the content of a file", 
					completion=case("readfile")+args("&${1:<content>}[],${2:<filename>}")+semicolon), 
				sublime.CompletionItem( #unix
					trigger="unix", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utilities Module)", 
					details="Gets the s/ms of current timestamp", 
					completion=optional("${2:#${1:[seconds]} = }")+case("unix")+args("#${1:[seconds]},#${3:[milliseconds]}")+semicolon), 
				sublime.CompletionItem( #eval
					trigger="eval", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Evaluates an expression with float values", 
					completion=optional("${3:${2:[&#]}${1:<result>} = }")+case("eval")+args("${2:[&#]}${1:<result>},${4:<expression>}")+semicolon), 
				sublime.CompletionItem( #mod
					trigger="mod", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Performs the modulo operation on the given values", 
					completion=optional("${2:#${1:[result]} = }")+case("mod")+args("#${1:[result]},${3:<dividend>},${4:<divisor>}")+semicolon), 
				sublime.CompletionItem( #restart
					trigger="restart", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Restarts the current script from the top without invalidating any variables", 
					completion=case("restart")+args("")+semicolon), 
				sublime.CompletionItem( #oldname
					trigger="oldname", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Klacaiba Module)", 
					details="Returns the previous names of the player with this name or uuid", 
					completion=optional("${2:&${1:result}[] = }")+case("oldname")+args("&${1:<result>}[],${3:<name|uuid>}")+semicolon), 

			# Utils Module
				sublime.CompletionItem( #trim
					trigger="trim", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utils Module)", 
					details="Removes whitespace", 
					completion=optional("&${1:result} = ")+case("trim")+args("&${2:string}")+semicolon), 
				sublime.CompletionItem( #shuffle
					trigger="shuffle", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utils Module)", 
					details="Shuffles an array", 
					completion=case("shuffle")+args("${1:array[]}")+semicolon), 

			# Utils actions iterator
				sublime.CompletionItem( #actions
					trigger="actions", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utils Module - actions iterator)", 
					details="Iterates over all actions", 
					completion=case("actions")), 
				sublime.CompletionItem( #ACTIONNAME
					trigger="ACTIONNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - actions iterator)", 
					details="Action name", 
					completion=var_wrap+"ACTIONNAME"+var_wrap), 
				sublime.CompletionItem( #ACTIONUSAGE
					trigger="ACTIONUSAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - actions iterator)", 
					details="Action usage", 
					completion=var_wrap+"ACTIONUSAGE"+var_wrap), 
				sublime.CompletionItem( #ACTIONRETURN
					trigger="ACTIONRETURN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - actions iterator)", 
					details="Action return", 
					completion=var_wrap+"ACTIONRETURN"+var_wrap), 
				sublime.CompletionItem( #ACTIONDESCRIPTION
					trigger="ACTIONDESCRIPTION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - actions iterator)", 
					details="Action description", 
					completion=var_wrap+"ACTIONDESCRIPTION"+var_wrap), 

			# Utils events iterator
				sublime.CompletionItem( #events
					trigger="events", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utils Module - events iterator)", 
					details="Iterates over all events", 
					completion=case("events")), 
				sublime.CompletionItem( #EVENTNAME
					trigger="EVENTNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - events iterator)", 
					details="Event name", 
					completion=var_wrap+"EVENTNAME"+var_wrap), 
				sublime.CompletionItem( #EVENTID
					trigger="EVENTID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - events iterator)", 
					details="Event id", 
					completion=var_wrap+"EVENTID"+var_wrap), 
				sublime.CompletionItem( #EVENTHELP
					trigger="EVENTHELP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - events iterator)", 
					details="Event help", 
					completion=var_wrap+"EVENTHELP"+var_wrap), 

			# Utils iterators iterator
				sublime.CompletionItem( #iterators
					trigger="iterators", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Utils Module - iterators iterator)", 
					details="Iterates over all iterators", 
					completion=case("iterators")), 
				sublime.CompletionItem( #ITERATORNAME
					trigger="ITERATORNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - iterators iterator)", 
					details="Iterator name", 
					completion=var_wrap+"ITERATORNAME"+var_wrap), 

			# Utils onPotionEffect event
				sublime.CompletionItem( #NEWEFFECT
					trigger="NEWEFFECT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - onPotionEffect event)", 
					details="New potion effect", 
					completion=var_wrap+"NEWEFFECT"+var_wrap), 
				sublime.CompletionItem( #NEWEFFECTID
					trigger="NEWEFFECTID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - onPotionEffect event)", 
					details="New potion effect id", 
					completion=var_wrap+"NEWEFFECTID"+var_wrap), 
				sublime.CompletionItem( #NEWEFFECTNAME
					trigger="NEWEFFECTNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - onPotionEffect event)", 
					details="New potion effect name", 
					completion=var_wrap+"NEWEFFECTNAME"+var_wrap), 
				sublime.CompletionItem( #NEWEFFECTPOWER
					trigger="NEWEFFECTPOWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - onPotionEffect event)", 
					details="New potion effect power", 
					completion=var_wrap+"NEWEFFECTPOWER"+var_wrap), 
				sublime.CompletionItem( #NEWEFFECTTIME
					trigger="NEWEFFECTTIME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Utils Module - onPotionEffect event)", 
					details="New potion effect time", 
					completion=var_wrap+"NEWEFFECTTIME"+var_wrap), 

			# WindowsNotifications Module
				sublime.CompletionItem( #notify
					trigger="notify", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(WindowsNotification Module)", 
					details="Creates a system tray", 
					completion=case("notify")+args("${1:[title]},${2:[message]}")+semicolon), 
				sublime.CompletionItem( #NOTIFICATIONMODULE
					trigger="NOTIFICATIONMODULE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(WindowsNotification Module)", 
					details="Returns true if the module is installed", 
					completion=var_wrap+"NOTIFICATIONMODULE"+var_wrap), 

			# Yaku Module
				sublime.CompletionItem( #mod
					trigger="mod", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Yaku's Module)", 
					details="Modulus function", 
					completion=case("mod")+args("#${1:<divident>},#${2:<divisor>}")+semicolon), 
				sublime.CompletionItem( #trunc
					trigger="trunc", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Yaku's Module)", 
					details="Returns the integer part of the number", 
					completion=case("trunc")+args("#${1:<float>}")+semicolon), 
				sublime.CompletionItem( #ackermann
					trigger="ackermann", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Yaku's Module)", 
					details="Ackermann function implementation", 
					completion=case("ackermann")+args("#${1:<m>},#${2:<n>}")+semicolon), 
				sublime.CompletionItem( #calcstacks
					trigger="calcstacks", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Yaku's Module)", 
					details="Calculates stacks", 
					completion=case("calcstacks")+args("#${1:<items>},#${2:[stacks]},#${3:[leftovers]}")+semicolon), 
				sublime.CompletionItem( #pickmod
					trigger="pickmod", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Yaku's Module)", 
					details="Improved original pick action", 
					completion=case("pickmod")+args("${1:[namespace]}:${2:<itemid>}:${3:[damage]},${4:[addInCreative]}")+semicolon), 
				sublime.CompletionItem( #antighost
					trigger="antighost", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(Yaku's Module)", 
					details="Resolve ghost blocks issue", 
					completion=case("antighost")+semicolon), 

			# BetterEcho
				sublime.CompletionItem( #betterecho
					trigger="betterecho", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sends the specified message to the server and client mods like baritone", 
					completion=case("betterecho")+args("${1:<text>}")+semicolon), 

			# MKB Key variables
				sublime.CompletionItem( #ALT
					trigger="ALT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"ALT"+var_wrap), 
				sublime.CompletionItem( #ALT
					trigger="ALT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~ALT"+var_wrap), 
				sublime.CompletionItem( #CTRL
					trigger="CTRL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"CTRL"+var_wrap), 
				sublime.CompletionItem( #CTRL
					trigger="CTRL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~CTRL"+var_wrap), 
				sublime.CompletionItem( #KEY_0
					trigger="KEY_0", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_0"+var_wrap), 
				sublime.CompletionItem( #KEY_0
					trigger="KEY_0", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_0"+var_wrap), 
				sublime.CompletionItem( #KEY_1
					trigger="KEY_1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_1"+var_wrap), 
				sublime.CompletionItem( #KEY_1
					trigger="KEY_1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_1"+var_wrap), 
				sublime.CompletionItem( #KEY_2
					trigger="KEY_2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_2"+var_wrap), 
				sublime.CompletionItem( #KEY_2
					trigger="KEY_2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_2"+var_wrap), 
				sublime.CompletionItem( #KEY_3
					trigger="KEY_3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_3"+var_wrap), 
				sublime.CompletionItem( #KEY_3
					trigger="KEY_3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_3"+var_wrap), 
				sublime.CompletionItem( #KEY_4
					trigger="KEY_4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_4"+var_wrap), 
				sublime.CompletionItem( #KEY_4
					trigger="KEY_4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_4"+var_wrap), 
				sublime.CompletionItem( #KEY_5
					trigger="KEY_5", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_5"+var_wrap), 
				sublime.CompletionItem( #KEY_5
					trigger="KEY_5", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_5"+var_wrap), 
				sublime.CompletionItem( #KEY_6
					trigger="KEY_6", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_6"+var_wrap), 
				sublime.CompletionItem( #KEY_6
					trigger="KEY_6", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_6"+var_wrap), 
				sublime.CompletionItem( #KEY_7
					trigger="KEY_7", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_7"+var_wrap), 
				sublime.CompletionItem( #KEY_7
					trigger="KEY_7", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_7"+var_wrap), 
				sublime.CompletionItem( #KEY_8
					trigger="KEY_8", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_8"+var_wrap), 
				sublime.CompletionItem( #KEY_8
					trigger="KEY_8", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_8"+var_wrap), 
				sublime.CompletionItem( #KEY_9
					trigger="KEY_9", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_9"+var_wrap), 
				sublime.CompletionItem( #KEY_9
					trigger="KEY_9", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_9"+var_wrap), 
				sublime.CompletionItem( #KEY_A
					trigger="KEY_A", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_A"+var_wrap), 
				sublime.CompletionItem( #KEY_A
					trigger="KEY_A", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_A"+var_wrap), 
				sublime.CompletionItem( #KEY_ADD
					trigger="KEY_ADD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_ADD"+var_wrap), 
				sublime.CompletionItem( #KEY_ADD
					trigger="KEY_ADD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_ADD"+var_wrap), 
				sublime.CompletionItem( #KEY_APOSTROPHE
					trigger="KEY_APOSTROPHE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_APOSTROPHE"+var_wrap), 
				sublime.CompletionItem( #KEY_APOSTROPHE
					trigger="KEY_APOSTROPHE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_APOSTROPHE"+var_wrap), 
				sublime.CompletionItem( #KEY_APPS
					trigger="KEY_APPS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_APPS"+var_wrap), 
				sublime.CompletionItem( #KEY_APPS
					trigger="KEY_APPS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_APPS"+var_wrap), 
				sublime.CompletionItem( #KEY_AT
					trigger="KEY_AT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_AT"+var_wrap), 
				sublime.CompletionItem( #KEY_AT
					trigger="KEY_AT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_AT"+var_wrap), 
				sublime.CompletionItem( #KEY_AX
					trigger="KEY_AX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_AX"+var_wrap), 
				sublime.CompletionItem( #KEY_AX
					trigger="KEY_AX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_AX"+var_wrap), 
				sublime.CompletionItem( #KEY_B
					trigger="KEY_B", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_B"+var_wrap), 
				sublime.CompletionItem( #KEY_B
					trigger="KEY_B", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_B"+var_wrap), 
				sublime.CompletionItem( #KEY_BACK
					trigger="KEY_BACK", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_BACK"+var_wrap), 
				sublime.CompletionItem( #KEY_BACK
					trigger="KEY_BACK", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_BACK"+var_wrap), 
				sublime.CompletionItem( #KEY_BACKSLASH
					trigger="KEY_BACKSLASH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_BACKSLASH"+var_wrap), 
				sublime.CompletionItem( #KEY_BACKSLASH
					trigger="KEY_BACKSLASH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_BACKSLASH"+var_wrap), 
				sublime.CompletionItem( #KEY_C
					trigger="KEY_C", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_C"+var_wrap), 
				sublime.CompletionItem( #KEY_C
					trigger="KEY_C", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_C"+var_wrap), 
				sublime.CompletionItem( #KEY_CAPITAL
					trigger="KEY_CAPITAL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_CAPITAL"+var_wrap), 
				sublime.CompletionItem( #KEY_CAPITAL
					trigger="KEY_CAPITAL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_CAPITAL"+var_wrap), 
				sublime.CompletionItem( #KEY_CIRCUMFLEX
					trigger="KEY_CIRCUMFLEX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_CIRCUMFLEX"+var_wrap), 
				sublime.CompletionItem( #KEY_CIRCUMFLEX
					trigger="KEY_CIRCUMFLEX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_CIRCUMFLEX"+var_wrap), 
				sublime.CompletionItem( #KEY_CLEAR
					trigger="KEY_CLEAR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_CLEAR"+var_wrap), 
				sublime.CompletionItem( #KEY_CLEAR
					trigger="KEY_CLEAR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_CLEAR"+var_wrap), 
				sublime.CompletionItem( #KEY_COLON
					trigger="KEY_COLON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_COLON"+var_wrap), 
				sublime.CompletionItem( #KEY_COLON
					trigger="KEY_COLON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_COLON"+var_wrap), 
				sublime.CompletionItem( #KEY_COMMA
					trigger="KEY_COMMA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_COMMA"+var_wrap), 
				sublime.CompletionItem( #KEY_COMMA
					trigger="KEY_COMMA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_COMMA"+var_wrap), 
				sublime.CompletionItem( #KEY_CONVERT
					trigger="KEY_CONVERT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_CONVERT"+var_wrap), 
				sublime.CompletionItem( #KEY_CONVERT
					trigger="KEY_CONVERT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_CONVERT"+var_wrap), 
				sublime.CompletionItem( #KEY_D
					trigger="KEY_D", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_D"+var_wrap), 
				sublime.CompletionItem( #KEY_D
					trigger="KEY_D", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_D"+var_wrap), 
				sublime.CompletionItem( #KEY_DECIMAL
					trigger="KEY_DECIMAL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_DECIMAL"+var_wrap), 
				sublime.CompletionItem( #KEY_DECIMAL
					trigger="KEY_DECIMAL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_DECIMAL"+var_wrap), 
				sublime.CompletionItem( #KEY_DELETE
					trigger="KEY_DELETE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_DELETE"+var_wrap), 
				sublime.CompletionItem( #KEY_DELETE
					trigger="KEY_DELETE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_DELETE"+var_wrap), 
				sublime.CompletionItem( #KEY_DIVIDE
					trigger="KEY_DIVIDE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_DIVIDE"+var_wrap), 
				sublime.CompletionItem( #KEY_DIVIDE
					trigger="KEY_DIVIDE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_DIVIDE"+var_wrap), 
				sublime.CompletionItem( #KEY_DOWN
					trigger="KEY_DOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_DOWN"+var_wrap), 
				sublime.CompletionItem( #KEY_DOWN
					trigger="KEY_DOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_DOWN"+var_wrap), 
				sublime.CompletionItem( #KEY_E
					trigger="KEY_E", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_E"+var_wrap), 
				sublime.CompletionItem( #KEY_E
					trigger="KEY_E", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_E"+var_wrap), 
				sublime.CompletionItem( #KEY_END
					trigger="KEY_END", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_END"+var_wrap), 
				sublime.CompletionItem( #KEY_END
					trigger="KEY_END", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_END"+var_wrap), 
				sublime.CompletionItem( #KEY_EQUALS
					trigger="KEY_EQUALS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_EQUALS"+var_wrap), 
				sublime.CompletionItem( #KEY_EQUALS
					trigger="KEY_EQUALS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_EQUALS"+var_wrap), 
				sublime.CompletionItem( #KEY_ESCAPE
					trigger="KEY_ESCAPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_ESCAPE"+var_wrap), 
				sublime.CompletionItem( #KEY_ESCAPE
					trigger="KEY_ESCAPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_ESCAPE"+var_wrap), 
				sublime.CompletionItem( #KEY_F
					trigger="KEY_F", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F"+var_wrap), 
				sublime.CompletionItem( #KEY_F
					trigger="KEY_F", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F"+var_wrap), 
				sublime.CompletionItem( #KEY_F1
					trigger="KEY_F1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F1"+var_wrap), 
				sublime.CompletionItem( #KEY_F1
					trigger="KEY_F1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F1"+var_wrap), 
				sublime.CompletionItem( #KEY_F10
					trigger="KEY_F10", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F10"+var_wrap), 
				sublime.CompletionItem( #KEY_F10
					trigger="KEY_F10", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F10"+var_wrap), 
				sublime.CompletionItem( #KEY_F11
					trigger="KEY_F11", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F11"+var_wrap), 
				sublime.CompletionItem( #KEY_F11
					trigger="KEY_F11", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F11"+var_wrap), 
				sublime.CompletionItem( #KEY_F12
					trigger="KEY_F12", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F12"+var_wrap), 
				sublime.CompletionItem( #KEY_F12
					trigger="KEY_F12", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F12"+var_wrap), 
				sublime.CompletionItem( #KEY_F13
					trigger="KEY_F13", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F13"+var_wrap), 
				sublime.CompletionItem( #KEY_F13
					trigger="KEY_F13", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F13"+var_wrap), 
				sublime.CompletionItem( #KEY_F14
					trigger="KEY_F14", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F14"+var_wrap), 
				sublime.CompletionItem( #KEY_F14
					trigger="KEY_F14", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F14"+var_wrap), 
				sublime.CompletionItem( #KEY_F15
					trigger="KEY_F15", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F15"+var_wrap), 
				sublime.CompletionItem( #KEY_F15
					trigger="KEY_F15", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F15"+var_wrap), 
				sublime.CompletionItem( #KEY_F16
					trigger="KEY_F16", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F16"+var_wrap), 
				sublime.CompletionItem( #KEY_F16
					trigger="KEY_F16", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F16"+var_wrap), 
				sublime.CompletionItem( #KEY_F17
					trigger="KEY_F17", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F17"+var_wrap), 
				sublime.CompletionItem( #KEY_F17
					trigger="KEY_F17", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F17"+var_wrap), 
				sublime.CompletionItem( #KEY_F18
					trigger="KEY_F18", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F18"+var_wrap), 
				sublime.CompletionItem( #KEY_F18
					trigger="KEY_F18", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F18"+var_wrap), 
				sublime.CompletionItem( #KEY_F19
					trigger="KEY_F19", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F19"+var_wrap), 
				sublime.CompletionItem( #KEY_F19
					trigger="KEY_F19", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F19"+var_wrap), 
				sublime.CompletionItem( #KEY_F2
					trigger="KEY_F2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F2"+var_wrap), 
				sublime.CompletionItem( #KEY_F2
					trigger="KEY_F2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F2"+var_wrap), 
				sublime.CompletionItem( #KEY_F3
					trigger="KEY_F3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F3"+var_wrap), 
				sublime.CompletionItem( #KEY_F3
					trigger="KEY_F3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F3"+var_wrap), 
				sublime.CompletionItem( #KEY_F4
					trigger="KEY_F4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F4"+var_wrap), 
				sublime.CompletionItem( #KEY_F4
					trigger="KEY_F4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F4"+var_wrap), 
				sublime.CompletionItem( #KEY_F5
					trigger="KEY_F5", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F5"+var_wrap), 
				sublime.CompletionItem( #KEY_F5
					trigger="KEY_F5", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F5"+var_wrap), 
				sublime.CompletionItem( #KEY_F6
					trigger="KEY_F6", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F6"+var_wrap), 
				sublime.CompletionItem( #KEY_F6
					trigger="KEY_F6", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F6"+var_wrap), 
				sublime.CompletionItem( #KEY_F7
					trigger="KEY_F7", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F7"+var_wrap), 
				sublime.CompletionItem( #KEY_F7
					trigger="KEY_F7", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F7"+var_wrap), 
				sublime.CompletionItem( #KEY_F8
					trigger="KEY_F8", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F8"+var_wrap), 
				sublime.CompletionItem( #KEY_F8
					trigger="KEY_F8", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F8"+var_wrap), 
				sublime.CompletionItem( #KEY_F9
					trigger="KEY_F9", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_F9"+var_wrap), 
				sublime.CompletionItem( #KEY_F9
					trigger="KEY_F9", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_F9"+var_wrap), 
				sublime.CompletionItem( #KEY_FUNCTION
					trigger="KEY_FUNCTION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_FUNCTION"+var_wrap), 
				sublime.CompletionItem( #KEY_FUNCTION
					trigger="KEY_FUNCTION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_FUNCTION"+var_wrap), 
				sublime.CompletionItem( #KEY_G
					trigger="KEY_G", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_G"+var_wrap), 
				sublime.CompletionItem( #KEY_G
					trigger="KEY_G", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_G"+var_wrap), 
				sublime.CompletionItem( #KEY_GRAVE
					trigger="KEY_GRAVE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_GRAVE"+var_wrap), 
				sublime.CompletionItem( #KEY_GRAVE
					trigger="KEY_GRAVE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_GRAVE"+var_wrap), 
				sublime.CompletionItem( #KEY_H
					trigger="KEY_H", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_H"+var_wrap), 
				sublime.CompletionItem( #KEY_H
					trigger="KEY_H", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_H"+var_wrap), 
				sublime.CompletionItem( #KEY_HOME
					trigger="KEY_HOME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_HOME"+var_wrap), 
				sublime.CompletionItem( #KEY_HOME
					trigger="KEY_HOME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_HOME"+var_wrap), 
				sublime.CompletionItem( #KEY_I
					trigger="KEY_I", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_I"+var_wrap), 
				sublime.CompletionItem( #KEY_I
					trigger="KEY_I", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_I"+var_wrap), 
				sublime.CompletionItem( #KEY_INSERT
					trigger="KEY_INSERT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_INSERT"+var_wrap), 
				sublime.CompletionItem( #KEY_INSERT
					trigger="KEY_INSERT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_INSERT"+var_wrap), 
				sublime.CompletionItem( #KEY_J
					trigger="KEY_J", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_J"+var_wrap), 
				sublime.CompletionItem( #KEY_J
					trigger="KEY_J", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_J"+var_wrap), 
				sublime.CompletionItem( #KEY_K
					trigger="KEY_K", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_K"+var_wrap), 
				sublime.CompletionItem( #KEY_K
					trigger="KEY_K", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_K"+var_wrap), 
				sublime.CompletionItem( #KEY_KANA
					trigger="KEY_KANA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_KANA"+var_wrap), 
				sublime.CompletionItem( #KEY_KANA
					trigger="KEY_KANA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_KANA"+var_wrap), 
				sublime.CompletionItem( #KEY_KANJI
					trigger="KEY_KANJI", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_KANJI"+var_wrap), 
				sublime.CompletionItem( #KEY_KANJI
					trigger="KEY_KANJI", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_KANJI"+var_wrap), 
				sublime.CompletionItem( #KEY_L
					trigger="KEY_L", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_L"+var_wrap), 
				sublime.CompletionItem( #KEY_L
					trigger="KEY_L", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_L"+var_wrap), 
				sublime.CompletionItem( #KEY_LBRACKET
					trigger="KEY_LBRACKET", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_LBRACKET"+var_wrap), 
				sublime.CompletionItem( #KEY_LBRACKET
					trigger="KEY_LBRACKET", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_LBRACKET"+var_wrap), 
				sublime.CompletionItem( #KEY_LCONTROL
					trigger="KEY_LCONTROL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_LCONTROL"+var_wrap), 
				sublime.CompletionItem( #KEY_LCONTROL
					trigger="KEY_LCONTROL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_LCONTROL"+var_wrap), 
				sublime.CompletionItem( #KEY_LEFT
					trigger="KEY_LEFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_LEFT"+var_wrap), 
				sublime.CompletionItem( #KEY_LEFT
					trigger="KEY_LEFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_LEFT"+var_wrap), 
				sublime.CompletionItem( #KEY_LMENU
					trigger="KEY_LMENU", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_LMENU"+var_wrap), 
				sublime.CompletionItem( #KEY_LMENU
					trigger="KEY_LMENU", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_LMENU"+var_wrap), 
				sublime.CompletionItem( #KEY_LMETA
					trigger="KEY_LMETA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_LMETA"+var_wrap), 
				sublime.CompletionItem( #KEY_LMETA
					trigger="KEY_LMETA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_LMETA"+var_wrap), 
				sublime.CompletionItem( #KEY_LSHIFT
					trigger="KEY_LSHIFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_LSHIFT"+var_wrap), 
				sublime.CompletionItem( #KEY_LSHIFT
					trigger="KEY_LSHIFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_LSHIFT"+var_wrap), 
				sublime.CompletionItem( #KEY_M
					trigger="KEY_M", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_M"+var_wrap), 
				sublime.CompletionItem( #KEY_M
					trigger="KEY_M", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_M"+var_wrap), 
				sublime.CompletionItem( #KEY_MINUS
					trigger="KEY_MINUS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_MINUS"+var_wrap), 
				sublime.CompletionItem( #KEY_MINUS
					trigger="KEY_MINUS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_MINUS"+var_wrap), 
				sublime.CompletionItem( #KEY_MOUSE3
					trigger="KEY_MOUSE3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_MOUSE3"+var_wrap), 
				sublime.CompletionItem( #KEY_MOUSE3
					trigger="KEY_MOUSE3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_MOUSE3"+var_wrap), 
				sublime.CompletionItem( #KEY_MOUSE4
					trigger="KEY_MOUSE4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_MOUSE4"+var_wrap), 
				sublime.CompletionItem( #KEY_MOUSE4
					trigger="KEY_MOUSE4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_MOUSE4"+var_wrap), 
				sublime.CompletionItem( #KEY_MULTIPLY
					trigger="KEY_MULTIPLY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_MULTIPLY"+var_wrap), 
				sublime.CompletionItem( #KEY_MULTIPLY
					trigger="KEY_MULTIPLY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_MULTIPLY"+var_wrap), 
				sublime.CompletionItem( #KEY_N
					trigger="KEY_N", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_N"+var_wrap), 
				sublime.CompletionItem( #KEY_N
					trigger="KEY_N", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_N"+var_wrap), 
				sublime.CompletionItem( #KEY_NEXT
					trigger="KEY_NEXT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NEXT"+var_wrap), 
				sublime.CompletionItem( #KEY_NEXT
					trigger="KEY_NEXT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NEXT"+var_wrap), 
				sublime.CompletionItem( #KEY_NOCONVERT
					trigger="KEY_NOCONVERT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NOCONVERT"+var_wrap), 
				sublime.CompletionItem( #KEY_NOCONVERT
					trigger="KEY_NOCONVERT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NOCONVERT"+var_wrap), 
				sublime.CompletionItem( #KEY_NONE
					trigger="KEY_NONE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NONE"+var_wrap), 
				sublime.CompletionItem( #KEY_NONE
					trigger="KEY_NONE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NONE"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMLOCK
					trigger="KEY_NUMLOCK", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMLOCK"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMLOCK
					trigger="KEY_NUMLOCK", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMLOCK"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD0
					trigger="KEY_NUMPAD0", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD0"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD0
					trigger="KEY_NUMPAD0", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD0"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD1
					trigger="KEY_NUMPAD1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD1"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD1
					trigger="KEY_NUMPAD1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD1"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD2
					trigger="KEY_NUMPAD2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD2"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD2
					trigger="KEY_NUMPAD2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD2"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD3
					trigger="KEY_NUMPAD3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD3"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD3
					trigger="KEY_NUMPAD3", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD3"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD4
					trigger="KEY_NUMPAD4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD4"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD4
					trigger="KEY_NUMPAD4", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD4"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD5
					trigger="KEY_NUMPAD5", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD5"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD5
					trigger="KEY_NUMPAD5", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD5"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD6
					trigger="KEY_NUMPAD6", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD6"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD6
					trigger="KEY_NUMPAD6", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD6"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD7
					trigger="KEY_NUMPAD7", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD7"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD7
					trigger="KEY_NUMPAD7", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD7"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD8
					trigger="KEY_NUMPAD8", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD8"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD8
					trigger="KEY_NUMPAD8", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD8"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD9
					trigger="KEY_NUMPAD9", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPAD9"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPAD9
					trigger="KEY_NUMPAD9", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPAD9"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPADCOMMA
					trigger="KEY_NUMPADCOMMA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPADCOMMA"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPADCOMMA
					trigger="KEY_NUMPADCOMMA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPADCOMMA"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPADENTER
					trigger="KEY_NUMPADENTER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPADENTER"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPADENTER
					trigger="KEY_NUMPADENTER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPADENTER"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPADEQUALS
					trigger="KEY_NUMPADEQUALS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_NUMPADEQUALS"+var_wrap), 
				sublime.CompletionItem( #KEY_NUMPADEQUALS
					trigger="KEY_NUMPADEQUALS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_NUMPADEQUALS"+var_wrap), 
				sublime.CompletionItem( #KEY_O
					trigger="KEY_O", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_O"+var_wrap), 
				sublime.CompletionItem( #KEY_O
					trigger="KEY_O", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_O"+var_wrap), 
				sublime.CompletionItem( #KEY_P
					trigger="KEY_P", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_P"+var_wrap), 
				sublime.CompletionItem( #KEY_P
					trigger="KEY_P", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_P"+var_wrap), 
				sublime.CompletionItem( #KEY_PAUSE
					trigger="KEY_PAUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_PAUSE"+var_wrap), 
				sublime.CompletionItem( #KEY_PAUSE
					trigger="KEY_PAUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_PAUSE"+var_wrap), 
				sublime.CompletionItem( #KEY_PERIOD
					trigger="KEY_PERIOD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_PERIOD"+var_wrap), 
				sublime.CompletionItem( #KEY_PERIOD
					trigger="KEY_PERIOD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_PERIOD"+var_wrap), 
				sublime.CompletionItem( #KEY_POWER
					trigger="KEY_POWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_POWER"+var_wrap), 
				sublime.CompletionItem( #KEY_POWER
					trigger="KEY_POWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_POWER"+var_wrap), 
				sublime.CompletionItem( #KEY_PRIOR
					trigger="KEY_PRIOR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_PRIOR"+var_wrap), 
				sublime.CompletionItem( #KEY_PRIOR
					trigger="KEY_PRIOR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_PRIOR"+var_wrap), 
				sublime.CompletionItem( #KEY_Q
					trigger="KEY_Q", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_Q"+var_wrap), 
				sublime.CompletionItem( #KEY_Q
					trigger="KEY_Q", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_Q"+var_wrap), 
				sublime.CompletionItem( #KEY_R
					trigger="KEY_R", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_R"+var_wrap), 
				sublime.CompletionItem( #KEY_R
					trigger="KEY_R", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_R"+var_wrap), 
				sublime.CompletionItem( #KEY_RBRACKET
					trigger="KEY_RBRACKET", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RBRACKET"+var_wrap), 
				sublime.CompletionItem( #KEY_RBRACKET
					trigger="KEY_RBRACKET", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RBRACKET"+var_wrap), 
				sublime.CompletionItem( #KEY_RCONTROL
					trigger="KEY_RCONTROL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RCONTROL"+var_wrap), 
				sublime.CompletionItem( #KEY_RCONTROL
					trigger="KEY_RCONTROL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RCONTROL"+var_wrap), 
				sublime.CompletionItem( #KEY_RETURN
					trigger="KEY_RETURN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RETURN"+var_wrap), 
				sublime.CompletionItem( #KEY_RETURN
					trigger="KEY_RETURN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RETURN"+var_wrap), 
				sublime.CompletionItem( #KEY_RIGHT
					trigger="KEY_RIGHT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RIGHT"+var_wrap), 
				sublime.CompletionItem( #KEY_RIGHT
					trigger="KEY_RIGHT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RIGHT"+var_wrap), 
				sublime.CompletionItem( #KEY_RMENU
					trigger="KEY_RMENU", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RMENU"+var_wrap), 
				sublime.CompletionItem( #KEY_RMENU
					trigger="KEY_RMENU", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RMENU"+var_wrap), 
				sublime.CompletionItem( #KEY_RMETA
					trigger="KEY_RMETA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RMETA"+var_wrap), 
				sublime.CompletionItem( #KEY_RMETA
					trigger="KEY_RMETA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RMETA"+var_wrap), 
				sublime.CompletionItem( #KEY_RSHIFT
					trigger="KEY_RSHIFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_RSHIFT"+var_wrap), 
				sublime.CompletionItem( #KEY_RSHIFT
					trigger="KEY_RSHIFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_RSHIFT"+var_wrap), 
				sublime.CompletionItem( #KEY_S
					trigger="KEY_S", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_S"+var_wrap), 
				sublime.CompletionItem( #KEY_S
					trigger="KEY_S", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_S"+var_wrap), 
				sublime.CompletionItem( #KEY_SCROLL
					trigger="KEY_SCROLL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SCROLL"+var_wrap), 
				sublime.CompletionItem( #KEY_SCROLL
					trigger="KEY_SCROLL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SCROLL"+var_wrap), 
				sublime.CompletionItem( #KEY_SECTION
					trigger="KEY_SECTION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SECTION"+var_wrap), 
				sublime.CompletionItem( #KEY_SECTION
					trigger="KEY_SECTION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SECTION"+var_wrap), 
				sublime.CompletionItem( #KEY_SEMICOLON
					trigger="KEY_SEMICOLON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SEMICOLON"+var_wrap), 
				sublime.CompletionItem( #KEY_SEMICOLON
					trigger="KEY_SEMICOLON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SEMICOLON"+var_wrap), 
				sublime.CompletionItem( #KEY_SLASH
					trigger="KEY_SLASH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SLASH"+var_wrap), 
				sublime.CompletionItem( #KEY_SLASH
					trigger="KEY_SLASH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SLASH"+var_wrap), 
				sublime.CompletionItem( #KEY_SLEEP
					trigger="KEY_SLEEP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SLEEP"+var_wrap), 
				sublime.CompletionItem( #KEY_SLEEP
					trigger="KEY_SLEEP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SLEEP"+var_wrap), 
				sublime.CompletionItem( #KEY_SPACE
					trigger="KEY_SPACE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SPACE"+var_wrap), 
				sublime.CompletionItem( #KEY_SPACE
					trigger="KEY_SPACE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SPACE"+var_wrap), 
				sublime.CompletionItem( #KEY_STOP
					trigger="KEY_STOP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_STOP"+var_wrap), 
				sublime.CompletionItem( #KEY_STOP
					trigger="KEY_STOP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_STOP"+var_wrap), 
				sublime.CompletionItem( #KEY_SUBTRACT
					trigger="KEY_SUBTRACT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SUBTRACT"+var_wrap), 
				sublime.CompletionItem( #KEY_SUBTRACT
					trigger="KEY_SUBTRACT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SUBTRACT"+var_wrap), 
				sublime.CompletionItem( #KEY_SYSRQ
					trigger="KEY_SYSRQ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_SYSRQ"+var_wrap), 
				sublime.CompletionItem( #KEY_SYSRQ
					trigger="KEY_SYSRQ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_SYSRQ"+var_wrap), 
				sublime.CompletionItem( #KEY_T
					trigger="KEY_T", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_T"+var_wrap), 
				sublime.CompletionItem( #KEY_T
					trigger="KEY_T", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_T"+var_wrap), 
				sublime.CompletionItem( #KEY_TAB
					trigger="KEY_TAB", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_TAB"+var_wrap), 
				sublime.CompletionItem( #KEY_TAB
					trigger="KEY_TAB", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_TAB"+var_wrap), 
				sublime.CompletionItem( #KEY_U
					trigger="KEY_U", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_U"+var_wrap), 
				sublime.CompletionItem( #KEY_U
					trigger="KEY_U", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_U"+var_wrap), 
				sublime.CompletionItem( #KEY_UNDERLINE
					trigger="KEY_UNDERLINE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_UNDERLINE"+var_wrap), 
				sublime.CompletionItem( #KEY_UNDERLINE
					trigger="KEY_UNDERLINE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_UNDERLINE"+var_wrap), 
				sublime.CompletionItem( #KEY_UNLABELED
					trigger="KEY_UNLABELED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_UNLABELED"+var_wrap), 
				sublime.CompletionItem( #KEY_UNLABELED
					trigger="KEY_UNLABELED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_UNLABELED"+var_wrap), 
				sublime.CompletionItem( #KEY_UP
					trigger="KEY_UP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_UP"+var_wrap), 
				sublime.CompletionItem( #KEY_UP
					trigger="KEY_UP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_UP"+var_wrap), 
				sublime.CompletionItem( #KEY_V
					trigger="KEY_V", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_V"+var_wrap), 
				sublime.CompletionItem( #KEY_V
					trigger="KEY_V", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_V"+var_wrap), 
				sublime.CompletionItem( #KEY_W
					trigger="KEY_W", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_W"+var_wrap), 
				sublime.CompletionItem( #KEY_W
					trigger="KEY_W", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_W"+var_wrap), 
				sublime.CompletionItem( #KEY_X
					trigger="KEY_X", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_X"+var_wrap), 
				sublime.CompletionItem( #KEY_X
					trigger="KEY_X", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_X"+var_wrap), 
				sublime.CompletionItem( #KEY_Y
					trigger="KEY_Y", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_Y"+var_wrap), 
				sublime.CompletionItem( #KEY_Y
					trigger="KEY_Y", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_Y"+var_wrap), 
				sublime.CompletionItem( #KEY_YEN
					trigger="KEY_YEN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_YEN"+var_wrap), 
				sublime.CompletionItem( #KEY_YEN
					trigger="KEY_YEN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_YEN"+var_wrap), 
				sublime.CompletionItem( #KEY_Z
					trigger="KEY_Z", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"KEY_Z"+var_wrap), 
				sublime.CompletionItem( #KEY_Z
					trigger="KEY_Z", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~KEY_Z"+var_wrap), 
				sublime.CompletionItem( #LMOUSE
					trigger="LMOUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"LMOUSE"+var_wrap), 
				sublime.CompletionItem( #LMOUSE
					trigger="LMOUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~LMOUSE"+var_wrap), 
				sublime.CompletionItem( #MIDDLEMOUSE
					trigger="MIDDLEMOUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"MIDDLEMOUSE"+var_wrap), 
				sublime.CompletionItem( #MIDDLEMOUSE
					trigger="MIDDLEMOUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~MIDDLEMOUSE"+var_wrap), 
				sublime.CompletionItem( #RMOUSE
					trigger="RMOUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"RMOUSE"+var_wrap), 
				sublime.CompletionItem( #RMOUSE
					trigger="RMOUSE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~RMOUSE"+var_wrap), 
				sublime.CompletionItem( #SHIFT
					trigger="SHIFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"SHIFT"+var_wrap), 
				sublime.CompletionItem( #SHIFT
					trigger="SHIFT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Pressed at start)", 
					details="", 
					completion=var_wrap+"~SHIFT"+var_wrap), 

			# Hit variable
				sublime.CompletionItem( #HIT
					trigger="HIT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Type of the thing the Player is looking at", 
					completion=var_wrap+"HIT"+var_wrap), 
				sublime.CompletionItem( #HIT_AGE
					trigger="HIT_AGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_AGE"+var_wrap), 
				sublime.CompletionItem( #HIT_ATTACHED
					trigger="HIT_ATTACHED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_ATTACHED"+var_wrap), 
				sublime.CompletionItem( #HIT_AXIS
					trigger="HIT_AXIS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_AXIS"+var_wrap), 
				sublime.CompletionItem( #HIT_BITES
					trigger="HIT_BITES", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_BITES"+var_wrap), 
				sublime.CompletionItem( #HIT_CHECK_DECAY
					trigger="HIT_CHECK_DECAY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_CHECK_DECAY"+var_wrap), 
				sublime.CompletionItem( #HIT_COLOR
					trigger="HIT_COLOR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_COLOR"+var_wrap), 
				sublime.CompletionItem( #HIT_CONDITIONAL
					trigger="HIT_CONDITIONAL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_CONDITIONAL"+var_wrap), 
				sublime.CompletionItem( #HIT_CONTENTS
					trigger="HIT_CONTENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_CONTENTS"+var_wrap), 
				sublime.CompletionItem( #HIT_DAMAGE
					trigger="HIT_DAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_DAMAGE"+var_wrap), 
				sublime.CompletionItem( #HIT_DECAYABLE
					trigger="HIT_DECAYABLE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_DECAYABLE"+var_wrap), 
				sublime.CompletionItem( #HIT_DELAY
					trigger="HIT_DELAY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_DELAY"+var_wrap), 
				sublime.CompletionItem( #HIT_DISARMED
					trigger="HIT_DISARMED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_DISARMED"+var_wrap), 
				sublime.CompletionItem( #HIT_DOWN
					trigger="HIT_DOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_DOWN"+var_wrap), 
				sublime.CompletionItem( #HIT_EAST
					trigger="HIT_EAST", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_EAST"+var_wrap), 
				sublime.CompletionItem( #HIT_ENABLED
					trigger="HIT_ENABLED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_ENABLED"+var_wrap), 
				sublime.CompletionItem( #HIT_EXPLODE
					trigger="HIT_EXPLODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_EXPLODE"+var_wrap), 
				sublime.CompletionItem( #HIT_EXTENDED
					trigger="HIT_EXTENDED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_EXTENDED"+var_wrap), 
				sublime.CompletionItem( #HIT_EYE
					trigger="HIT_EYE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_EYE"+var_wrap), 
				sublime.CompletionItem( #HIT_FACING
					trigger="HIT_FACING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_FACING"+var_wrap), 
				sublime.CompletionItem( #HIT_HALF
					trigger="HIT_HALF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_HALF"+var_wrap), 
				sublime.CompletionItem( #HIT_HAS_BOTTLE_0
					trigger="HIT_HAS_BOTTLE_0", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_HAS_BOTTLE_0"+var_wrap), 
				sublime.CompletionItem( #HIT_HAS_BOTTLE_1
					trigger="HIT_HAS_BOTTLE_1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_HAS_BOTTLE_1"+var_wrap), 
				sublime.CompletionItem( #HIT_HAS_BOTTLE_2
					trigger="HIT_HAS_BOTTLE_2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_HAS_BOTTLE_2"+var_wrap), 
				sublime.CompletionItem( #HIT_HAS_RECORD
					trigger="HIT_HAS_RECORD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_HAS_RECORD"+var_wrap), 
				sublime.CompletionItem( #HIT_HINGE
					trigger="HIT_HINGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_HINGE"+var_wrap), 
				sublime.CompletionItem( #HIT_IN_WALL
					trigger="HIT_IN_WALL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_IN_WALL"+var_wrap), 
				sublime.CompletionItem( #HIT_LAYERS
					trigger="HIT_LAYERS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_LAYERS"+var_wrap), 
				sublime.CompletionItem( #HIT_LEGACY_DATA
					trigger="HIT_LEGACY_DATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_LEGACY_DATA"+var_wrap), 
				sublime.CompletionItem( #HIT_LEVEL
					trigger="HIT_LEVEL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_LEVEL"+var_wrap), 
				sublime.CompletionItem( #HIT_LOCKED
					trigger="HIT_LOCKED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_LOCKED"+var_wrap), 
				sublime.CompletionItem( #HIT_MODE
					trigger="HIT_MODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_MODE"+var_wrap), 
				sublime.CompletionItem( #HIT_MOISTURE
					trigger="HIT_MOISTURE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_MOISTURE"+var_wrap), 
				sublime.CompletionItem( #HIT_NODROP
					trigger="HIT_NODROP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_NODROP"+var_wrap), 
				sublime.CompletionItem( #HIT_NORTH
					trigger="HIT_NORTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_NORTH"+var_wrap), 
				sublime.CompletionItem( #HIT_OCCUPIED
					trigger="HIT_OCCUPIED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_OCCUPIED"+var_wrap), 
				sublime.CompletionItem( #HIT_OPEN
					trigger="HIT_OPEN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_OPEN"+var_wrap), 
				sublime.CompletionItem( #HIT_PART
					trigger="HIT_PART", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_PART"+var_wrap), 
				sublime.CompletionItem( #HIT_POWER
					trigger="HIT_POWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_POWER"+var_wrap), 
				sublime.CompletionItem( #HIT_POWERED
					trigger="HIT_POWERED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_POWERED"+var_wrap), 
				sublime.CompletionItem( #HIT_ROTATION
					trigger="HIT_ROTATION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_ROTATION"+var_wrap), 
				sublime.CompletionItem( #HIT_SEAMLESS
					trigger="HIT_SEAMLESS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_SEAMLESS"+var_wrap), 
				sublime.CompletionItem( #HIT_SHAPE
					trigger="HIT_SHAPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_SHAPE"+var_wrap), 
				sublime.CompletionItem( #HIT_SHORT
					trigger="HIT_SHORT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_SHORT"+var_wrap), 
				sublime.CompletionItem( #HIT_SNOWY
					trigger="HIT_SNOWY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_SNOWY"+var_wrap), 
				sublime.CompletionItem( #HIT_SOUTH
					trigger="HIT_SOUTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_SOUTH"+var_wrap), 
				sublime.CompletionItem( #HIT_STAGE
					trigger="HIT_STAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_STAGE"+var_wrap), 
				sublime.CompletionItem( #HIT_TRIGGERED
					trigger="HIT_TRIGGERED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_TRIGGERED"+var_wrap), 
				sublime.CompletionItem( #HIT_TYPE
					trigger="HIT_TYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_TYPE"+var_wrap), 
				sublime.CompletionItem( #HIT_UP
					trigger="HIT_UP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_UP"+var_wrap), 
				sublime.CompletionItem( #HIT_VARIANT
					trigger="HIT_VARIANT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_VARIANT"+var_wrap), 
				sublime.CompletionItem( #HIT_WEST
					trigger="HIT_WEST", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_WEST"+var_wrap), 
				sublime.CompletionItem( #HIT_WET
					trigger="HIT_WET", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"HIT_WET"+var_wrap), 
				sublime.CompletionItem( #HITDATA
					trigger="HITDATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Metadata of the thing the Player is looking at", 
					completion=var_wrap+"HITDATA"+var_wrap), 
				sublime.CompletionItem( #HITID
					trigger="HITID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the thing the Player is looking at", 
					completion=var_wrap+"HITID"+var_wrap), 
				sublime.CompletionItem( #HITNAME
					trigger="HITNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname of the thing the Player is looking at", 
					completion=var_wrap+"HITNAME"+var_wrap), 
				sublime.CompletionItem( #HITPROGRESS
					trigger="HITPROGRESS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Block breaking progress of the block the Player is looking at", 
					completion=var_wrap+"HITPROGRESS"+var_wrap), 
				sublime.CompletionItem( #HITSIDE
					trigger="HITSIDE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Block side of the block the Player is looking at", 
					completion=var_wrap+"HITSIDE"+var_wrap), 
				sublime.CompletionItem( #HITUUID
					trigger="HITUUID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="UUID of the looked at entity or player", 
					completion=var_wrap+"HITUUID"+var_wrap), 
				sublime.CompletionItem( #HITX
					trigger="HITX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="X position of the block the Player is looking at", 
					completion=var_wrap+"HITX"+var_wrap), 
				sublime.CompletionItem( #HITY
					trigger="HITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Y position of the block the Player is looking at", 
					completion=var_wrap+"HITY"+var_wrap), 
				sublime.CompletionItem( #HITZ
					trigger="HITZ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Z position of the block the Player is looking at", 
					completion=var_wrap+"HITZ"+var_wrap), 

			# Trace variable
				sublime.CompletionItem( #trace
					trigger="trace", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Performs a ray trace operation which sets the raytrace variables in the local scope", 
					completion=case("trace")+args("${1:<distance>},${2:[entities]}")+semicolon), 
				sublime.CompletionItem( #TRACE_AGE
					trigger="TRACE_AGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_AGE"+var_wrap), 
				sublime.CompletionItem( #TRACE_ATTACHED
					trigger="TRACE_ATTACHED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_ATTACHED"+var_wrap), 
				sublime.CompletionItem( #TRACE_AXIS
					trigger="TRACE_AXIS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_AXIS"+var_wrap), 
				sublime.CompletionItem( #TRACE_BITES
					trigger="TRACE_BITES", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_BITES"+var_wrap), 
				sublime.CompletionItem( #TRACE_CHECK_DECAY
					trigger="TRACE_CHECK_DECAY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_CHECK_DECAY"+var_wrap), 
				sublime.CompletionItem( #TRACE_COLOR
					trigger="TRACE_COLOR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_COLOR"+var_wrap), 
				sublime.CompletionItem( #TRACE_CONDITIONAL
					trigger="TRACE_CONDITIONAL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_CONDITIONAL"+var_wrap), 
				sublime.CompletionItem( #TRACE_CONTENTS
					trigger="TRACE_CONTENTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_CONTENTS"+var_wrap), 
				sublime.CompletionItem( #TRACE_DAMAGE
					trigger="TRACE_DAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_DAMAGE"+var_wrap), 
				sublime.CompletionItem( #TRACE_DECAYABLE
					trigger="TRACE_DECAYABLE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_DECAYABLE"+var_wrap), 
				sublime.CompletionItem( #TRACE_DELAY
					trigger="TRACE_DELAY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_DELAY"+var_wrap), 
				sublime.CompletionItem( #TRACE_DISARMED
					trigger="TRACE_DISARMED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_DISARMED"+var_wrap), 
				sublime.CompletionItem( #TRACE_DOWN
					trigger="TRACE_DOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_DOWN"+var_wrap), 
				sublime.CompletionItem( #TRACE_EAST
					trigger="TRACE_EAST", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_EAST"+var_wrap), 
				sublime.CompletionItem( #TRACE_ENABLED
					trigger="TRACE_ENABLED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_ENABLED"+var_wrap), 
				sublime.CompletionItem( #TRACE_EXPLODE
					trigger="TRACE_EXPLODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_EXPLODE"+var_wrap), 
				sublime.CompletionItem( #TRACE_EXTENDED
					trigger="TRACE_EXTENDED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_EXTENDED"+var_wrap), 
				sublime.CompletionItem( #TRACE_EYE
					trigger="TRACE_EYE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_EYE"+var_wrap), 
				sublime.CompletionItem( #TRACE_FACING
					trigger="TRACE_FACING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_FACING"+var_wrap), 
				sublime.CompletionItem( #TRACE_HALF
					trigger="TRACE_HALF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_HALF"+var_wrap), 
				sublime.CompletionItem( #TRACE_HAS_BOTTLE_0
					trigger="TRACE_HAS_BOTTLE_0", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_HAS_BOTTLE_0"+var_wrap), 
				sublime.CompletionItem( #TRACE_HAS_BOTTLE_1
					trigger="TRACE_HAS_BOTTLE_1", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_HAS_BOTTLE_1"+var_wrap), 
				sublime.CompletionItem( #TRACE_HAS_BOTTLE_2
					trigger="TRACE_HAS_BOTTLE_2", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_HAS_BOTTLE_2"+var_wrap), 
				sublime.CompletionItem( #TRACE_HAS_RECORD
					trigger="TRACE_HAS_RECORD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_HAS_RECORD"+var_wrap), 
				sublime.CompletionItem( #TRACE_HINGE
					trigger="TRACE_HINGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_HINGE"+var_wrap), 
				sublime.CompletionItem( #TRACE_IN_WALL
					trigger="TRACE_IN_WALL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_IN_WALL"+var_wrap), 
				sublime.CompletionItem( #TRACE_LAYERS
					trigger="TRACE_LAYERS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_LAYERS"+var_wrap), 
				sublime.CompletionItem( #TRACE_LEGACY_DATA
					trigger="TRACE_LEGACY_DATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_LEGACY_DATA"+var_wrap), 
				sublime.CompletionItem( #TRACE_LEVEL
					trigger="TRACE_LEVEL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_LEVEL"+var_wrap), 
				sublime.CompletionItem( #TRACE_LOCKED
					trigger="TRACE_LOCKED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_LOCKED"+var_wrap), 
				sublime.CompletionItem( #TRACE_MODE
					trigger="TRACE_MODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_MODE"+var_wrap), 
				sublime.CompletionItem( #TRACE_MOISTURE
					trigger="TRACE_MOISTURE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_MOISTURE"+var_wrap), 
				sublime.CompletionItem( #TRACE_NODROP
					trigger="TRACE_NODROP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_NODROP"+var_wrap), 
				sublime.CompletionItem( #TRACE_NORTH
					trigger="TRACE_NORTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_NORTH"+var_wrap), 
				sublime.CompletionItem( #TRACE_OCCUPIED
					trigger="TRACE_OCCUPIED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_OCCUPIED"+var_wrap), 
				sublime.CompletionItem( #TRACE_OPEN
					trigger="TRACE_OPEN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_OPEN"+var_wrap), 
				sublime.CompletionItem( #TRACE_PART
					trigger="TRACE_PART", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_PART"+var_wrap), 
				sublime.CompletionItem( #TRACE_POWER
					trigger="TRACE_POWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_POWER"+var_wrap), 
				sublime.CompletionItem( #TRACE_POWERED
					trigger="TRACE_POWERED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_POWERED"+var_wrap), 
				sublime.CompletionItem( #TRACE_ROTATION
					trigger="TRACE_ROTATION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_ROTATION"+var_wrap), 
				sublime.CompletionItem( #TRACE_SEAMLESS
					trigger="TRACE_SEAMLESS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_SEAMLESS"+var_wrap), 
				sublime.CompletionItem( #TRACE_SHAPE
					trigger="TRACE_SHAPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_SHAPE"+var_wrap), 
				sublime.CompletionItem( #TRACE_SHORT
					trigger="TRACE_SHORT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_SHORT"+var_wrap), 
				sublime.CompletionItem( #TRACE_SNOWY
					trigger="TRACE_SNOWY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_SNOWY"+var_wrap), 
				sublime.CompletionItem( #TRACE_SOUTH
					trigger="TRACE_SOUTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_SOUTH"+var_wrap), 
				sublime.CompletionItem( #TRACE_STAGE
					trigger="TRACE_STAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_STAGE"+var_wrap), 
				sublime.CompletionItem( #TRACE_TRIGGERED
					trigger="TRACE_TRIGGERED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_TRIGGERED"+var_wrap), 
				sublime.CompletionItem( #TRACE_TYPE
					trigger="TRACE_TYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_TYPE"+var_wrap), 
				sublime.CompletionItem( #TRACE_UP
					trigger="TRACE_UP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_UP"+var_wrap), 
				sublime.CompletionItem( #TRACE_VARIANT
					trigger="TRACE_VARIANT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_VARIANT"+var_wrap), 
				sublime.CompletionItem( #TRACE_WEST
					trigger="TRACE_WEST", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_WEST"+var_wrap), 
				sublime.CompletionItem( #TRACE_WET
					trigger="TRACE_WET", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="", 
					completion=var_wrap+"TRACE_WET"+var_wrap), 
				sublime.CompletionItem( #TRACEDATA
					trigger="TRACEDATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Metadata of the block", 
					completion=var_wrap+"TRACEDATA"+var_wrap), 
				sublime.CompletionItem( #TRACEID
					trigger="TRACEID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="The id", 
					completion=var_wrap+"TRACEID"+var_wrap), 
				sublime.CompletionItem( #TRACENAME
					trigger="TRACENAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="The name", 
					completion=var_wrap+"TRACENAME"+var_wrap), 
				sublime.CompletionItem( #TRACESIDE
					trigger="TRACESIDE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Side of the block", 
					completion=var_wrap+"TRACESIDE"+var_wrap), 
				sublime.CompletionItem( #TRACETYPE
					trigger="TRACETYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="The type of the result", 
					completion=var_wrap+"TRACETYPE"+var_wrap), 
				sublime.CompletionItem( #TRACEUUID
					trigger="TRACEUUID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Returns the UUID of other players", 
					completion=var_wrap+"TRACEUUID"+var_wrap), 
				sublime.CompletionItem( #TRACEX
					trigger="TRACEX", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="X position", 
					completion=var_wrap+"TRACEX"+var_wrap), 
				sublime.CompletionItem( #TRACEY
					trigger="TRACEY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Y position", 
					completion=var_wrap+"TRACEY"+var_wrap), 
				sublime.CompletionItem( #TRACEZ
					trigger="TRACEZ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Z position", 
					completion=var_wrap+"TRACEZ"+var_wrap), 

			# Keybinds
				sublime.CompletionItem( #forward
					trigger="forward", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Forward keybind for keydown/keyup/togglekey", 
					completion="forward"), 
				sublime.CompletionItem( #back
					trigger="back", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Back keybind for keydown/keyup/togglekey", 
					completion="back"), 
				sublime.CompletionItem( #left
					trigger="left", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Left keybind for keydown/keyup/togglekey", 
					completion="left"), 
				sublime.CompletionItem( #right
					trigger="right", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Right keybind for keydown/keyup/togglekey", 
					completion="right"), 
				sublime.CompletionItem( #jump
					trigger="jump", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Jump keybind for keydown/keyup/togglekey", 
					completion="jump"), 
				sublime.CompletionItem( #sneak
					trigger="sneak", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Sneak keybind for keydown/keyup/togglekey", 
					completion="sneak"), 
				sublime.CompletionItem( #playerlist
					trigger="playerlist", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Playerlist keybind for keydown/keyup/togglekey", 
					completion="playerlist"), 
				sublime.CompletionItem( #sprint
					trigger="sprint", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Sprint keybind for keydown/keyup/togglekey", 
					completion="sprint"), 
				sublime.CompletionItem( #inventory
					trigger="inventory", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Inventory keybind for key", 
					completion="inventory"), 
				sublime.CompletionItem( #drop
					trigger="drop", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Drop keybind for key", 
					completion="drop"), 
				sublime.CompletionItem( #chat
					trigger="chat", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Chat keybind for key", 
					completion="chat"), 
				sublime.CompletionItem( #attack
					trigger="attack", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Attack keybind for key", 
					completion="attack"), 
				sublime.CompletionItem( #use
					trigger="use", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Use keybind for key", 
					completion="use"), 
				sublime.CompletionItem( #pick
					trigger="pick", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Pick keybind for key", 
					completion="pick"), 
				sublime.CompletionItem( #screenshot
					trigger="screenshot", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Screenshot keybind for key", 
					completion="screenshot"), 
				sublime.CompletionItem( #smoothcamera
					trigger="smoothcamera", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Smoothcamera keybind for key", 
					completion="smoothcamera"), 
				sublime.CompletionItem( #swaphands
					trigger="swaphands", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(Keybind)", 
					details="Swaphands keybind for key", 
					completion="swaphands"), 

			# MKB Default
				sublime.CompletionItem( #achievementget
					trigger="achievementget", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Displays a popup you get when completing an advancement with a custom message and optionally a custom item", 
					completion=case("achievementget")+args("${1:<text>},${2:[itemid]}:${3:[damage]}")+semicolon), 
				sublime.CompletionItem( #AMBIENTVOLUME
					trigger="AMBIENTVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Ambient/Environment", 
					completion=var_wrap+"AMBIENTVOLUME"+var_wrap), 
				sublime.CompletionItem( #ARMOUR
					trigger="ARMOUR", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Armour points (each icon equals 2 points)", 
					completion=var_wrap+"ARMOUR"+var_wrap), 
				sublime.CompletionItem( #arraysize
					trigger="arraysize", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Stores the size of the specified array in #outvar", 
					completion=case("arraysize")+args("${1:<array>}[],#${2:[outvar]}")+semicolon), 
				sublime.CompletionItem( #assign
					trigger="assign", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Internal function", 
					completion=optional("${1:<var>}")+" = "+optional("${2:<value>}")+semicolon), 
				sublime.CompletionItem( #ATTACKPOWER
					trigger="ATTACKPOWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Attack power", 
					completion=var_wrap+"ATTACKPOWER"+var_wrap), 
				sublime.CompletionItem( #ATTACKSPEED
					trigger="ATTACKSPEED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Attack speed", 
					completion=var_wrap+"ATTACKSPEED"+var_wrap), 
				sublime.CompletionItem( #bind
					trigger="bind", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set the specified key binding to the specified key code", 
					completion=case("bind")+args("${1:<bind>},${2:<keycode>}")+semicolon), 
				sublime.CompletionItem( #bindgui
					trigger="bindgui", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Binds the specified custom screen to the slot specified", 
					completion=case("bindgui")+args("${1:<slot>},${2:<screen>}")+semicolon), 
				sublime.CompletionItem( #BIOME
					trigger="BIOME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Biome the Player is currently in", 
					completion=var_wrap+"BIOME"+var_wrap), 
				sublime.CompletionItem( #BLOCKVOLUME
					trigger="BLOCKVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Blocks", 
					completion=var_wrap+"BLOCKVOLUME"+var_wrap), 
				sublime.CompletionItem( #BOOTSDAMAGE
					trigger="BOOTSDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the Players boots", 
					completion=var_wrap+"BOOTSDAMAGE"+var_wrap), 
				sublime.CompletionItem( #BOOTSDURABILITY
					trigger="BOOTSDURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the Players boots", 
					completion=var_wrap+"BOOTSDURABILITY"+var_wrap), 
				sublime.CompletionItem( #BOOTSID
					trigger="BOOTSID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the Players boots", 
					completion=var_wrap+"BOOTSID"+var_wrap), 
				sublime.CompletionItem( #BOOTSNAME
					trigger="BOOTSNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname of the Players boots", 
					completion=var_wrap+"BOOTSNAME"+var_wrap), 
				sublime.CompletionItem( #BOWCHARGE
					trigger="BOWCHARGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Charge of bow", 
					completion=var_wrap+"BOWCHARGE"+var_wrap), 
				sublime.CompletionItem( #break
					trigger="break", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Interrupts exection of the innermost loop", 
					completion=case("break")+semicolon), 
				sublime.CompletionItem( #calcyawto
					trigger="calcyawto", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Calculates the absolute yaw angle", 
					completion=case("calcyawto")+args("${1:<xpos>},${2:<zpos>},#${3:[yaw]},#${4:[dist}ance]")+semicolon), 
				sublime.CompletionItem( #camera
					trigger="camera", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set the current camera mode, call with no arguments to toggle modes", 
					completion=case("camera")+args("${1:[mode]}")+semicolon), 
				sublime.CompletionItem( #CAMERA
					trigger="CAMERA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Current camera mode", 
					completion=var_wrap+"CAMERA"+var_wrap), 
				sublime.CompletionItem( #CANFLY
					trigger="CANFLY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Whether the Player can fly", 
					completion=var_wrap+"CANFLY"+var_wrap), 
				sublime.CompletionItem( #CARDINALYAW
					trigger="CARDINALYAW", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Yaw of the player relative to north (YAW + 180)", 
					completion=var_wrap+"CARDINALYAW"+var_wrap), 
				sublime.CompletionItem( #CHAT
					trigger="CHAT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onChat) Chat message with control codes", 
					completion=var_wrap+"CHAT"+var_wrap), 
				sublime.CompletionItem( #CHATCLEAN
					trigger="CHATCLEAN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onChat) Chat message without control codes", 
					completion=var_wrap+"CHATCLEAN"+var_wrap), 
				sublime.CompletionItem( #chatfilter
					trigger="chatfilter", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Enable or disable the chat filter", 
					completion=case("chatfilter")+args("${1:<enabled>}")+semicolon), 
				sublime.CompletionItem( #chatheight
					trigger="chatheight", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set height of the Minecraft chat whilst ingame", 
					completion=case("chatheight")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #chatheightfocused
					trigger="chatheightfocused", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set height of the Minecraft chat whilst in the chat GUI", 
					completion=case("chatheightfocused")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #CHATJSON
					trigger="CHATJSON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onBetterChat) Chat message in JSON", 
					completion=var_wrap+"CHATMESSAGE"+var_wrap), 
				sublime.CompletionItem( #CHATMESSAGE
					trigger="CHATMESSAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onChat) The message part of an incoming chat line, could be wrong", 
					completion=var_wrap+"CHATMESSAGE"+var_wrap), 
				sublime.CompletionItem( #chatopacity
					trigger="chatopacity", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set opacity of the Minecraft chat", 
					completion=case("chatopacity")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #CHATPLAYER
					trigger="CHATPLAYER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onChat) The player who send a chat line, could be wrong", 
					completion=var_wrap+"CHATPLAYER"+var_wrap), 
				sublime.CompletionItem( #chatscale
					trigger="chatscale", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set scale of the Minecraft chat", 
					completion=case("chatscale")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #chatvisible
					trigger="chatvisible", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set visibility of minecraft chat", 
					completion=case("chatvisible")+args("${1:<value>}")+semicolon), 
				sublime.CompletionItem( #chatwidth
					trigger="chatwidth", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set width of the Minecraft chat", 
					completion=case("chatwidth")+args("${1:<value}>,${2:[time]}")+semicolon), 
				sublime.CompletionItem( #CHESTPLATEDAMAGE
					trigger="CHESTPLATEDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the Players chestplate", 
					completion=var_wrap+"CHESTPLATEDAMAGE"+var_wrap), 
				sublime.CompletionItem( #CHESTPLATEDURABILITY
					trigger="CHESTPLATEDURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the Players chestplate", 
					completion=var_wrap+"CHESTPLATEDURABILITY"+var_wrap), 
				sublime.CompletionItem( #CHESTPLATEID
					trigger="CHESTPLATEID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the Players chestplate", 
					completion=var_wrap+"CHESTPLATEID"+var_wrap), 
				sublime.CompletionItem( #CHESTPLATENAME
					trigger="CHESTPLATENAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname of the Players chestplate", 
					completion=var_wrap+"CHESTPLATENAME"+var_wrap), 
				sublime.CompletionItem( #CHUNKUPDATES
					trigger="CHUNKUPDATES", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Amount of chunk updates", 
					completion=var_wrap+"CHUNKUPDATES"+var_wrap), 
				sublime.CompletionItem( #clearchat
					trigger="clearchat", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Clears all messages from the chat window", 
					completion=case("clearchat")+args("")+semicolon), 
				sublime.CompletionItem( #clearcrafting
					trigger="clearcrafting", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Cancels any queued crafting jobs", 
					completion=case("clearcrafting")+args("")+semicolon), 
				sublime.CompletionItem( #config
					trigger="config", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Switch to the specified configuration", 
					completion=case("config")+args("${1:<configname>}")+semicolon), 
				sublime.CompletionItem( #CONFIG
					trigger="CONFIG", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Loaded config", 
					completion=var_wrap+"CONFIG"+var_wrap), 
				sublime.CompletionItem( #CONTAINERSLOTS
					trigger="CONTAINERSLOTS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Amount of slots in opened container", 
					completion=var_wrap+"CONTAINERSLOTS"+var_wrap), 
				sublime.CompletionItem( #controls
					trigger="controls", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(controls iterator)", 
					details="Iterates over all existing controls", 
					completion=case("controls")+args("[layout][:type]+")+semicolon), 
				sublime.CompletionItem( #CONTROLID
					trigger="CONTROLID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(controls iterator)" , 
					details="Internal id of the current control", 
					completion=var_wrap+"CONTROLID"+var_wrap), 
				sublime.CompletionItem( #CONTROLNAME
					trigger="CONTROLNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(controls iterator)", 
					details="The name set in the control under Control Name", 
					completion=var_wrap+"CONTROLNAME"+var_wrap), 
				sublime.CompletionItem( #CONTROLTYPE
					trigger="CONTROLTYPE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(controls iterator)" , 
					details="Type of the current control", 
					completion=var_wrap+"CONTROLTYPE"+var_wrap), 
				sublime.CompletionItem( #COOLDOWN
					trigger="COOLDOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Cooldown", 
					completion=var_wrap+"COOLDOWN"+var_wrap), 
				sublime.CompletionItem( #craft
					trigger="craft", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Queues an auto-crafting request", 
					completion=case("craft")+args("${1:<item>}:${2:[damage]},${3:[amount]},${4:[throw]},${5:[verbose]}")+semicolon), 
				sublime.CompletionItem( #craftandwait
					trigger="craftandwait", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Queues an auto-crafting request and waits", 
					completion=case("craftandwait")+args("${1:<item>}:${2:[damage]},${3:[amount]},${4:[throw]},${5:[verbose]}")+semicolon), 
				sublime.CompletionItem( #DATE
					trigger="DATE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Current date in the format year-month-day", 
					completion=var_wrap+"DATE"+var_wrap), 
				sublime.CompletionItem( #DATETIME
					trigger="DATETIME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Current date and time in the format year-month-day hour:minute:second", 
					completion=var_wrap+"DATETIME"+var_wrap), 
				sublime.CompletionItem( #DAY
					trigger="DAY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Number of day", 
					completion=var_wrap+"DAY"+var_wrap), 
				sublime.CompletionItem( #DAYTICKS
					trigger="DAYTICKS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="TICKS value modulo 24000 and shifted back 6000 so that 0 aligns with midnight ", 
					completion=var_wrap+"DAYTICKS"+var_wrap), 
				sublime.CompletionItem( #DAYTIME
					trigger="DAYTIME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Ingame time in the format hh:mm", 
					completion=var_wrap+"DAYTIME"+var_wrap), 
				sublime.CompletionItem( #dec
					trigger="dec", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Decrements the specified counter by 1 or by the specified amount", 
					completion=case("dec")+args("#${1:<var>},${2:[amount]}")+semicolon), 
				sublime.CompletionItem( #decode
					trigger="decode", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Converts an string from base64 back to an normal string", 
					completion=case("decode")+args("${1:<input>},${2:[&output]}")+semicolon), 
				sublime.CompletionItem( #DIFFICULTY
					trigger="DIFFICULTY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Difficulty of the world", 
					completion=var_wrap+"DIFFICULTY"+var_wrap), 
				sublime.CompletionItem( #DIMENSION
					trigger="DIMENSION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Dimension the Player is in", 
					completion=var_wrap+"DIMENSION"+var_wrap), 
				sublime.CompletionItem( #DIRECTION
					trigger="DIRECTION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Direction the Player is looking at, shortened to the first character", 
					completion=var_wrap+"DIRECTION"+var_wrap), 
				sublime.CompletionItem( #disconnect
					trigger="disconnect", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Disconnects from the current game or server", 
					completion=case("disconnect")+args("")+semicolon), 
				sublime.CompletionItem( #DISPLAYHEIGHT
					trigger="DISPLAYHEIGHT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Height of the minecraft window", 
					completion=var_wrap+"DISPLAYHEIGHT"+var_wrap), 
				sublime.CompletionItem( #DISPLAYNAME
					trigger="DISPLAYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Player's displayname", 
					completion=var_wrap+"DISPLAYNAME"+var_wrap), 
				sublime.CompletionItem( #DISPLAYWIDTH
					trigger="DISPLAYWIDTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Width of the minecraft window", 
					completion=var_wrap+"DISPLAYWIDTH"+var_wrap), 
				sublime.CompletionItem( #DURABILITY
					trigger="DURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the equipped item", 
					completion=var_wrap+"DURABILITY"+var_wrap), 
				sublime.CompletionItem( #echo
					trigger="echo", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sends the specified message to the server", 
					completion=case("echo")+args("${1:<text>}")+semicolon), 
				sublime.CompletionItem( #effects
					trigger="effects", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(effects iterator)", 
					details="Iterates over all currently applied effects", 
					completion=case("effects")), 
				sublime.CompletionItem( #EFFECT
					trigger="EFFECT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(effects iterator)", 
					details="Internal string id of the effect", 
					completion=var_wrap+"EFFECT"+var_wrap), 
				sublime.CompletionItem( #EFFECTID
					trigger="EFFECTID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(effects iterator)", 
					details="Internal numeric id of the effect", 
					completion=var_wrap+"EFFECTID"+var_wrap), 
				sublime.CompletionItem( #EFFECTNAME
					trigger="EFFECTNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(effects iterator)", 
					details="Display name of the effect", 
					completion=var_wrap+"EFFECTNAME"+var_wrap), 
				sublime.CompletionItem( #EFFECTPOWER
					trigger="EFFECTPOWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(effects iterator)", 
					details="Power of the effect", 
					completion=var_wrap+"EFFECTPOWER"+var_wrap), 
				sublime.CompletionItem( #EFFECTTIME
					trigger="EFFECTTIME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(effects iterator)", 
					details="Remaining time of the effect in seconds", 
					completion=var_wrap+"EFFECTTIME"+var_wrap), 
				sublime.CompletionItem( #enchantments
					trigger="enchantments", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(enchantments iterator)", 
					details="Iterates over all enchantments on the equipped item", 
					completion=case("enchantments")), 
				sublime.CompletionItem( #ENCHANTMENT
					trigger="ENCHANTMENT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(enchantments iterator)", 
					details="Display name of the enchantment", 
					completion=var_wrap+"ENCHANTMENT"+var_wrap), 
				sublime.CompletionItem( #ENCHANTMENTNAME
					trigger="ENCHANTMENTNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(enchantments iterator)", 
					details="Only the name of the enchantment", 
					completion=var_wrap+"ENCHANTMENTNAME"+var_wrap), 
				sublime.CompletionItem( #ENCHANTMENTPOWER
					trigger="ENCHANTMENTPOWER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(enchantments iterator)", 
					details="Power of the enchantment", 
					completion=var_wrap+"ENCHANTMENTPOWER"+var_wrap), 
				sublime.CompletionItem( #encode
					trigger="encode", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Converts an string to base 64", 
					completion=case("encode")+args("${1:<input>},&${2:[output]}")+semicolon), 
				sublime.CompletionItem( #env
					trigger="env", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(env iterator)", 
					details="Iterates over all available variables", 
					completion=case("env")), 
				sublime.CompletionItem( #VARNAME
					trigger="VARNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(env iterator)", 
					details="Contains the variable name", 
					completion=var_wrap+"VARNAME"+var_wrap), 
				sublime.CompletionItem( #exec
					trigger="exec", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Creates a task by running the specified script file", 
					completion=case("exec")+args("${1:<file.txt>},${2:[taskname]},${3:[params]}")+semicolon), 
				sublime.CompletionItem( #filter
					trigger="filter", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Indicate that this chat meesage should be filtered and terminate", 
					completion=case("filter")+semicolon), 
				sublime.CompletionItem( #FLYING
					trigger="FLYING", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Whether the Player is flying", 
					completion=var_wrap+"FLYING"+var_wrap), 
				sublime.CompletionItem( #fog
					trigger="fog", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Toggles render distance, or optionally specify render distance", 
					completion=case("fog")+args("${1:[value]}")+semicolon), 
				sublime.CompletionItem( #fov
					trigger="fov", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the FOV angle in degrees, specifying time causes the value to change smoothly", 
					completion=case("fov")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #FOV
					trigger="FOV", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Field of View", 
					completion=var_wrap+"FOV"+var_wrap), 
				sublime.CompletionItem( #FPS
					trigger="FPS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Frames per Second", 
					completion=var_wrap+"FPS"+var_wrap), 
				sublime.CompletionItem( #GAMEMODE
					trigger="GAMEMODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Gamemode of the player as a string", 
					completion=var_wrap+"GAMEMODE"+var_wrap), 
				sublime.CompletionItem( #gamma
					trigger="gamma", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the brightness value (percent), specifying time causes the value to change smoothly", 
					completion=case("gamma")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #GAMMA
					trigger="GAMMA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Brightness level", 
					completion=var_wrap+"GAMMA"+var_wrap), 
				sublime.CompletionItem( #getid
					trigger="getid", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the ID and data value of the block at the specified coordinates", 
					completion=case("getid")+args("${1:<x>},${2:<y>},${3:<z>},&${4:[idvar]},#${5:[datavar]},&${6:[variants]}")+semicolon), 
				sublime.CompletionItem( #getidrel
					trigger="getidrel", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the ID and data value of the block at the specified coordinates relative to the player", 
					completion=case("getidrel")+args("${1:<dx>},${2:<dy>},${3:<dz>},&${4:[idvar]},#${5:[datavar]},&${6:[variants]}")+semicolon), 
				sublime.CompletionItem( #getiteminfo
					trigger="getiteminfo", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the name and other info for the specified item id", 
					completion=case("getiteminfo")+args("${1:<item>}:${2:[damage]},&${3:[namevar]},#${4:[maxstacksize]},&${5:[type]},&${6:[dropid]},#${7:[maxdurability]}")+semicolon), 
				sublime.CompletionItem( #getproperty
					trigger="getproperty", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Returns the value of the specified property from the specified GUI control", 
					completion=case("getproperty")+args("${1:<control>},${2:<property>}")+semicolon), 
				sublime.CompletionItem( #getslot
					trigger="getslot", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the id of the slot containing an item matching the specified item id", 
					completion=case("getslot")+args("${1:<item>}:${2:[damage]},#${3:<slotid>},${4:[startfromslotid]}")+semicolon), 
				sublime.CompletionItem( #getslotitem
					trigger="getslotitem", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets information about the item in the specified slot", 
					completion=case("getslotitem")+args("${1:<slotid>},&${2:<idvar>},#${3:[stacksizevar]},#${4:[datavar]}")+semicolon), 
				sublime.CompletionItem( #gui
					trigger="gui", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Opens the specified gui screen", 
					completion=case("gui")+args("${1:[name]}")+semicolon), 
				sublime.CompletionItem( #GUI
					trigger="GUI", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Name of the currently open GUI", 
					completion=var_wrap+"GUI"+var_wrap), 
				sublime.CompletionItem( #HEALTH
					trigger="HEALTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Health points (each icon equals 2 points)", 
					completion=var_wrap+"HEALTH"+var_wrap), 
				sublime.CompletionItem( #HELMDAMAGE
					trigger="HELMDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the Players helm", 
					completion=var_wrap+"HELMDAMAGE"+var_wrap), 
				sublime.CompletionItem( #HELMDURABILITY
					trigger="HELMDURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the Players helm", 
					completion=var_wrap+"HELMDURABILITY"+var_wrap), 
				sublime.CompletionItem( #HELMID
					trigger="HELMID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the Players helm", 
					completion=var_wrap+"HELMID"+var_wrap), 
				sublime.CompletionItem( #HELMNAME
					trigger="HELMNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname of the Players helm", 
					completion=var_wrap+"HELMNAME"+var_wrap), 
				sublime.CompletionItem( #HOSTILEVOLUME
					trigger="HOSTILEVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Hostile Creatures", 
					completion=var_wrap+"HOSTILEVOLUME"+var_wrap), 
				sublime.CompletionItem( #HUNGER
					trigger="HUNGER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Hunger points (each icon equals 2 points)", 
					completion=var_wrap+"HUNGER"+var_wrap), 
				sublime.CompletionItem( #iif
					trigger="iif", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Inline IF statement", 
					completion=case("iif")+args("${1:<condition>},${2:<truetext>},${3:[falsetext]}")+semicolon), 
				sublime.CompletionItem( #import
					trigger="import", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Overlay the specified configuration", 
					completion=case("import")+args("${1:<configname>}")+semicolon), 
				sublime.CompletionItem( #inc
					trigger="inc", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Increments the specified counter by 1 or by the specified amount", 
					completion=case("inc")+args("#${1:<var>},${2:[amount]}")+semicolon), 
				sublime.CompletionItem( #indexof
					trigger="indexof", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the first index of a item", 
					completion=case("indexof")+args("${1:<array>}[],#${2:<outvar>},${3:<searchfor>},${4:[casesensitiv]}")+semicolon), 
				sublime.CompletionItem( #inventorydown
					trigger="inventorydown", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Scrolls the specified number of slots down through the hotbar", 
					completion=case("inventorydown")+args("${1:[amount]}")+semicolon), 
				sublime.CompletionItem( #inventoryup
					trigger="inventoryup", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Scrolls the specified number of slots up through the hotbar", 
					completion=case("inventoryup")+args("${1:[amount]}")+semicolon), 
				sublime.CompletionItem( #INVSLOT
					trigger="INVSLOT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Selected inventory slot", 
					completion=var_wrap+"INVSLOT"+var_wrap), 
				sublime.CompletionItem( #isrunning
					trigger="isrunning", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Returns whether the specified macro is currently running", 
					completion=case("isrunning")+args("${1:<macro>}")+semicolon), 
				sublime.CompletionItem( #ITEM
					trigger="ITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the equipped item", 
					completion=var_wrap+"ITEM"+var_wrap), 
				sublime.CompletionItem( #ITEMCODE
					trigger="ITEMCODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Internal code for the equipped item", 
					completion=var_wrap+"ITEMCODE"+var_wrap), 
				sublime.CompletionItem( #ITEMDAMAGE
					trigger="ITEMDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the equipped item", 
					completion=var_wrap+"ITEMDAMAGE"+var_wrap), 
				sublime.CompletionItem( #itemid
					trigger="itemid", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the legacy (numeric) ID for the specified item", 
					completion=case("itemid")+args("${1:<item>}")+semicolon), 
				sublime.CompletionItem( #ITEMIDDMG
					trigger="ITEMIDDMG", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID and durability seperated by a colon of the equipped item", 
					completion=var_wrap+"ITEMIDDMG"+var_wrap), 
				sublime.CompletionItem( #ITEMNAME
					trigger="ITEMNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname for the equipped item", 
					completion=var_wrap+"ITEMNAME"+var_wrap), 
				sublime.CompletionItem( #itemname
					trigger="itemname", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Get the item descriptor for a legacy (numeric) item ID", 
					completion=case("itemname")+args("${1:<id>}")+semicolon), 
				sublime.CompletionItem( #ITEMUSEPCT
					trigger="ITEMUSEPCT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Previous value as percent of total useage time", 
					completion=var_wrap+"ITEMUSEPCT"+var_wrap), 
				sublime.CompletionItem( #ITEMUSETICKS
					trigger="ITEMUSETICKS ", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="All usable items increase this value once per tick", 
					completion=var_wrap+"ITEMUSETICKS"+var_wrap), 
				sublime.CompletionItem( #join
					trigger="join", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Combines values inside array with glue", 
					completion=case("join")+args("${1:<glue>},${2:<array>}[],&${3:[output]}")+semicolon), 
				sublime.CompletionItem( #JOINEDPLAYER
					trigger="JOINEDPLAYER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onPlayerJoined) Player name of the newly joined player", 
					completion=var_wrap+"JOINEDPLAYER"+var_wrap), 
				sublime.CompletionItem( #key
					trigger="key", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Activates the specified key binding for 1 tick", 
					completion=case("key")+args("${1:<bind>}")+semicolon), 
				sublime.CompletionItem( #keydown
					trigger="keydown", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the specified key binding state to pressed, only works with pressable bindings", 
					completion=case("keydown")+args("${1:<bind>}")+semicolon), 
				sublime.CompletionItem( #KEYID
					trigger="KEYID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Key ID of the key that started this script", 
					completion=var_wrap+"KEYID"+var_wrap), 
				sublime.CompletionItem( #KEYNAME
					trigger="KEYNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Keyname of the key that started this script", 
					completion=var_wrap+"KEYNAME"+var_wrap), 
				sublime.CompletionItem( #keyup
					trigger="keyup", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the specified key binding state to unpressed, only works with pressable bindings", 
					completion=case("keyup")+args("${1:<bind>}")+semicolon), 
				sublime.CompletionItem( #lcase
					trigger="lcase", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Converts the input string to lower case and stores it in output", 
					completion=case("lcase")+args("${1:<input>},&${2:[output]}")+semicolon), 
				sublime.CompletionItem( #LEGGINGSDAMAGE
					trigger="LEGGINGSDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the Players leggings", 
					completion=var_wrap+"LEGGINGSDAMAGE"+var_wrap), 
				sublime.CompletionItem( #LEGGINGSDURABILITY
					trigger="LEGGINGSDURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the Players leggings", 
					completion=var_wrap+"LEGGINGSDURABILITY"+var_wrap), 
				sublime.CompletionItem( #LEGGINGSID
					trigger="LEGGINGSID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the Players leggings", 
					completion=var_wrap+"LEGGINGSID"+var_wrap), 
				sublime.CompletionItem( #LEGGINGSNAME
					trigger="LEGGINGSNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname of the Players leggings", 
					completion=var_wrap+"LEGGINGSNAME"+var_wrap), 
				sublime.CompletionItem( #LEVEL
					trigger="LEVEL", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="XP level", 
					completion=var_wrap+"LEVEL"+var_wrap), 
				sublime.CompletionItem( #LIGHT
					trigger="LIGHT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Light level at current location", 
					completion=var_wrap+"LIGHT"+var_wrap), 
				sublime.CompletionItem( #LOCALDIFFICULTY
					trigger="LOCALDIFFICULTY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Local difficulty of the world", 
					completion=var_wrap+"LOCALDIFFICULTY"+var_wrap), 
				sublime.CompletionItem( #log
					trigger="log", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Shows the specified text only on the client-side in the chat window", 
					completion=case("log")+args("${1:<text>}")+semicolon), 
				sublime.CompletionItem( #lograw
					trigger="lograw", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Similar to minecraft tellraw command", 
					completion=case("lograw")+args("${1:<json>}")+semicolon), 
				sublime.CompletionItem( #logto
					trigger="logto", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Outputs the specified text into the specified target", 
					completion=case("logto")+args("${1:<target>},${2:<text>}")+semicolon), 
				sublime.CompletionItem( #look
					trigger="look", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Faces the player in the specified direction", 
					completion=case("look")+args("${1:<yaw>},${2:[pitch]},${3:[time]}")+semicolon), 
				sublime.CompletionItem( #looks
					trigger="looks", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Smoothly turnes the player to the specified direction", 
					completion=case("looks")+args("${1:<yaw>},${2:[pitch]},${3:[time]}")+semicolon), 
				sublime.CompletionItem( #running
					trigger="running", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(running iterator)", 
					details="Iterates over all currently running macros", 
					completion=case("running")), 
				sublime.CompletionItem( #MACROID
					trigger="MACROID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(running iterator)", 
					details="Internal id of the macro", 
					completion=var_wrap+"MACROID"+var_wrap), 
				sublime.CompletionItem( #MACRONAME
					trigger="MACRONAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(running iterator)", 
					details="Display name of the macro", 
					completion=var_wrap+"MACRONAME"+var_wrap), 
				sublime.CompletionItem( #MACROTIME
					trigger="MACROTIME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(running iterator)", 
					details="The time the macro is already running in seconds", 
					completion=var_wrap+"MACROTIME"+var_wrap), 
				sublime.CompletionItem( #MAINHANDCOOLDOWN
					trigger="MAINHANDCOOLDOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="mainhand cooldown", 
					completion=var_wrap+"MAINHANDCOOLDOWN"+var_wrap), 
				sublime.CompletionItem( #MAINHANDDURABILITY
					trigger="MAINHANDDURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the mainhand item", 
					completion=var_wrap+"MAINHANDDURABILITY"+var_wrap), 
				sublime.CompletionItem( #MAINHANDITEM
					trigger="MAINHANDITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the mainhand item", 
					completion=var_wrap+"MAINHANDITEM"+var_wrap), 
				sublime.CompletionItem( #MAINHANDITEMCODE
					trigger="MAINHANDITEMCODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Internal code for the mainhand item", 
					completion=var_wrap+"MAINHANDITEMCODE"+var_wrap), 
				sublime.CompletionItem( #MAINHANDITEMDAMAGE
					trigger="MAINHANDITEMDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the mainhand item", 
					completion=var_wrap+"MAINHANDITEMDAMAGE"+var_wrap), 
				sublime.CompletionItem( #MAINHANDITEMIDDMG
					trigger="MAINHANDITEMIDDMG", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID and durability seperated by a colon of the mainhand item", 
					completion=var_wrap+"MAINHANDITEMIDDMG"+var_wrap), 
				sublime.CompletionItem( #MAINHANDITEMNAME
					trigger="MAINHANDITEMNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname for the mainhand item", 
					completion=var_wrap+"MAINHANDITEMNAME"+var_wrap), 
				sublime.CompletionItem( #MAINHANDSTACKSIZE
					trigger="MAINHANDSTACKSIZE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Stacksize of the mainhand item", 
					completion=var_wrap+"MAINHANDSTACKSIZE"+var_wrap), 
				sublime.CompletionItem( #match
					trigger="match", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(<subject>,<pattern>,[&target],[group],[default])", 
					details="Runs a regular expression match on the subject", 
					completion=case("match")+args("${1:<subject>},${2:<pattern>},&${3:[target]},${4:[group]},${5:[default]}")+semicolon), 
				sublime.CompletionItem( #match alt
					trigger="match", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(<subject>,<pattern>,{&target1,&target2,&target3})", 
					details="Runs a regular expression match on the subject", 
					completion=case("match")+args("${1:<subject>},${2:<pattern>},{${3:&target1,&target2...}}")+semicolon), 
				sublime.CompletionItem( #match alt 2
					trigger="match", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(<subject>,<pattern>,&target[])", 
					details="Runs a regular expression match on the subject", 
					completion=case("match")+args("${1:<subject>},${2:<pattern>},&${3:[target]}[]")+semicolon), 
				sublime.CompletionItem( #MAXPLAYERS
					trigger="MAXPLAYERS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Amount of players the server can hold", 
					completion=var_wrap+"MAXPLAYERS"+var_wrap), 
				sublime.CompletionItem( #MODE
					trigger="MODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Gamemode of the player as a number", 
					completion=var_wrap+"MODE"+var_wrap), 
				sublime.CompletionItem( #modify
					trigger="modify", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Set new content for this chat message", 
					completion=case("modify")+args("${1:<newmessage>}")+semicolon), 
				sublime.CompletionItem( #MUSIC
					trigger="MUSIC", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Music", 
					completion=var_wrap+"MUSIC"+var_wrap), 
				sublime.CompletionItem( #music
					trigger="music", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the music volume, specifying time causes the value to change smoothly", 
					completion=case("music")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #NEUTRALVOLUME
					trigger="NEUTRALVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Friendly Creatures", 
					completion=var_wrap+"NEUTRALVOLUME"+var_wrap), 
				sublime.CompletionItem( #next
					trigger="next", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Completes a for or foreach loop", 
					completion=case("next")+semicolon), 
				sublime.CompletionItem( #OFFHANDCOOLDOWN
					trigger="OFFHANDCOOLDOWN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Offhand cooldown", 
					completion=var_wrap+"OFFHANDCOOLDOWN"+var_wrap), 
				sublime.CompletionItem( #OFFHANDDURABILITY
					trigger="OFFHANDDURABILITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Durability of the offhand item", 
					completion=var_wrap+"OFFHANDDURABILITY"+var_wrap), 
				sublime.CompletionItem( #OFFHANDITEM
					trigger="OFFHANDITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID of the offhand item", 
					completion=var_wrap+"OFFHANDITEM"+var_wrap), 
				sublime.CompletionItem( #OFFHANDITEMCODE
					trigger="OFFHANDITEMCODE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Internal code for the offhand item", 
					completion=var_wrap+"OFFHANDITEMCODE"+var_wrap), 
				sublime.CompletionItem( #OFFHANDITEMDAMAGE
					trigger="OFFHANDITEMDAMAGE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Maximum uses of the offhand item", 
					completion=var_wrap+"OFFHANDITEMDAMAGE"+var_wrap), 
				sublime.CompletionItem( #OFFHANDITEMIDDMG
					trigger="OFFHANDITEMIDDMG", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="ID and durability seperated by a colon of the offhand item", 
					completion=var_wrap+"OFFHANDITEMIDDMG"+var_wrap), 
				sublime.CompletionItem( #OFFHANDITEMNAME
					trigger="OFFHANDITEMNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Displayname for the offhand item", 
					completion=var_wrap+"OFFHANDITEMNAME"+var_wrap), 
				sublime.CompletionItem( #OFFHANDSTACKSIZE
					trigger="OFFHANDSTACKSIZE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Stacksize of the offhand item", 
					completion=var_wrap+"OFFHANDSTACKSIZE"+var_wrap), 
				sublime.CompletionItem( #OLDINVSLOT
					trigger="OLDINVSLOT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onInventorySlotChange) Selected inventory slot before it was changed", 
					completion=var_wrap+"OLDINVSLOT"+var_wrap), 
				sublime.CompletionItem( #ONLINEPLAYERS
					trigger="ONLINEPLAYERS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Amount of players currently on the server", 
					completion=var_wrap+"ONLINEPLAYERS"+var_wrap), 
				sublime.CompletionItem( #OXYGEN
					trigger="OXYGEN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Air Level (from 0 to 300)", 
					completion=var_wrap+"OXYGEN"+var_wrap), 
				sublime.CompletionItem( #pass
					trigger="pass", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Indicate that this chat message should PASS the filter and terminate", 
					completion=case("pass")+semicolon), 
				sublime.CompletionItem( #pick
					trigger="pick", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Selects the specified item id if it is on the hotbar", 
					completion=case("pick")+args("${1:<item>}:${2:[damage]},${3:<item>}:${4:[damage]}${5:,...}")+semicolon), 
				sublime.CompletionItem( #PICKUPAMOUNT
					trigger="PICKUPAMOUNT", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onPickupItem) Amount of items picked up", 
					completion=var_wrap+"PICKUPAMOUNT"+var_wrap), 
				sublime.CompletionItem( #PICKUPDATA
					trigger="PICKUPDATA", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onPickupItem) Metadata of the picked up item", 
					completion=var_wrap+"PICKUPDATA"+var_wrap), 
				sublime.CompletionItem( #PICKUPID
					trigger="PICKUPID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onPickupItem) Item id of the picked up item", 
					completion=var_wrap+"PICKUPID"+var_wrap), 
				sublime.CompletionItem( #PICKUPITEM
					trigger="PICKUPITEM", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onPickupItem) Display name of the picked up item", 
					completion=var_wrap+"PICKUPITEM"+var_wrap), 
				sublime.CompletionItem( #PITCH
					trigger="PITCH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Pitch of the player", 
					completion=var_wrap+"PITCH"+var_wrap), 
				sublime.CompletionItem( #placesign
					trigger="placesign", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Places a sign in the world with the specified text", 
					completion=case("placesign")+args("${1:[line1]},${2:[line2]},${3:[line3]},${4:[line4]},${5:[showgui]}")+semicolon), 
				sublime.CompletionItem( #PLAYER
					trigger="PLAYER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Player's name", 
					completion=var_wrap+"PLAYER"+var_wrap), 
				sublime.CompletionItem( #players
					trigger="players", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(players iterator)", 
					details="Iterates over all online players", 
					completion=case("players")), 
				sublime.CompletionItem( #PLAYERNAME
					trigger="PLAYERNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(players iterator)", 
					details="The current player", 
					completion=var_wrap+"PLAYERNAME"+var_wrap), 
				sublime.CompletionItem( #PLAYERVOLUME
					trigger="PLAYERVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Players", 
					completion=var_wrap+"PLAYERVOLUME"+var_wrap), 
				sublime.CompletionItem( #playsound
					trigger="playsound", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Plays the specified sound", 
					completion=case("playsound")+args("${1:<sound>},${2:[volume]}")+semicolon), 
				sublime.CompletionItem( #pop
					trigger="pop", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Removes the last entry from the end of array and stores it in outvar", 
					completion=case("pop")+args("${1:<array>}[],${2:<outvar>}")+semicolon), 
				sublime.CompletionItem( #popupmessage
					trigger="popupmessage", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Display a message in the area above the hotbar", 
					completion=case("popupmessage")+args("${1:<message>},${2:[animate]}")+semicolon), 
				sublime.CompletionItem( #press
					trigger="press", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Injects the specified key event directly into the keyboard buffer for 1 tick", 
					completion=case("press")+args("${1:<lwjgl_name>},${2:[deep]}")+semicolon), 
				sublime.CompletionItem( #prompt
					trigger="prompt", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Displays a prompt by parsing the params in paramstring", 
					completion=case("prompt")+args("&${1:<target>},${2:<paramstring>},${3:[prompt]},${4:[override]},${5:[default]}")+semicolon), 
				sublime.CompletionItem( #properties
					trigger="properties", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="(properties iterator)", 
					details="Iterates over all properties of the block you are looking at", 
					completion=case("properties")), 
				sublime.CompletionItem( #PROPNAME
					trigger="PROPNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(properties iterator)", 
					details="The name of the current property", 
					completion=var_wrap+"PROPNAME"+var_wrap), 
				sublime.CompletionItem( #PROPVALUE
					trigger="PROPVALUE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="(properties iterator)", 
					details="The value of the current property", 
					completion=var_wrap+"PROPVALUE"+var_wrap), 
				sublime.CompletionItem( #push
					trigger="push", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Appends value to the end of array[]", 
					completion=case("push")+args("${1:<array>}[],${2:<value>}")+semicolon), 
				sublime.CompletionItem( #put
					trigger="put", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Inserts value at the first empty point in array[]", 
					completion=case("put")+args("${1:<array>}[],${2:<value>}")+semicolon), 
				sublime.CompletionItem( #RAIN
					trigger="RAIN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Rain level", 
					completion=var_wrap+"RAIN"+var_wrap), 
				sublime.CompletionItem( #random
					trigger="random", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Assigns a random number between min and max to target", 
					completion=case("random")+args("#${1:<target>},${2:[max]},${3:[min]}")+semicolon), 
				sublime.CompletionItem( #REASON
					trigger="REASON", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="(onAutoCraftingComplete) The reason why the crafting was completed or aborted", 
					completion=var_wrap+"REASON"+var_wrap), 
				sublime.CompletionItem( #RECORDVOLUME
					trigger="RECORDVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Jukebox/Noteblocks", 
					completion=var_wrap+"RECORDVOLUME"+var_wrap), 
				sublime.CompletionItem( #regexreplace
					trigger="regexreplace", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Replace all matches of pattern with replace in &subject", 
					completion=case("regexreplace")+args("&${1:<subject>},${2:<pattern>},${3:[replace]}")+semicolon), 
				sublime.CompletionItem( #reloadresources
					trigger="reloadresources", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Reloads resource packs, same as pressing F3 + T", 
					completion=case("reloadresources")+semicolon), 
				sublime.CompletionItem( #repl
					trigger="repl", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Access the REPL interface", 
					completion=case("repl")+semicolon), 
				sublime.CompletionItem( #replace
					trigger="replace", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Replace all occurrences of search with replace in &subject", 
					completion=case("replace")+args("&${1:<subject>},${2:<search>},${3:[replace]}")+semicolon), 
				sublime.CompletionItem( #resourcepacks
					trigger="resourcepacks", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the resource pack stack to the order matching the specified patterns", 
					completion=case("resourcepacks")+args("${1:[pattern]},${2:[pattern...]}")+semicolon), 
				sublime.CompletionItem( #RESOURCEPACKS
					trigger="RESOURCEPACKS[]", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Array of selected resource packs", 
					completion=var_wrap+"RESOURCEPACKS[]"+var_wrap), 
				sublime.CompletionItem( #respawn
					trigger="respawn", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Respawns the player if you are dead", 
					completion=case("respawn")+args("")+semicolon), 
				sublime.CompletionItem( #SATURATION
					trigger="SATURATION", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Saturation level (normally hidden from the Player)", 
					completion=var_wrap+"SATURATION"+var_wrap), 
				sublime.CompletionItem( #SCREEN
					trigger="SCREEN", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Name of the current custom GUI", 
					completion=var_wrap+"SCREEN"+var_wrap), 
				sublime.CompletionItem( #SCREENNAME
					trigger="SCREENNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Display name of the current custom GUI", 
					completion=var_wrap+"SCREENNAME"+var_wrap), 
				sublime.CompletionItem( #SEED
					trigger="SEED", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Seed of the world (only available in SP)", 
					completion=var_wrap+"SEED"+var_wrap), 
				sublime.CompletionItem( #selectchannel
					trigger="selectchannel", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Selects channel", 
					completion=case("selectchannel")+args("${1:<channel>}")+semicolon), 
				sublime.CompletionItem( #sendmessage
					trigger="sendmessage", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sends a message", 
					completion=case("sendmessage")+args("${1:[params]}")+semicolon), 
				sublime.CompletionItem( #SENSITIVITY
					trigger="SENSITIVITY", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Sensitivity", 
					completion=var_wrap+"SENSITIVITY"+var_wrap), 
				sublime.CompletionItem( #sensitivity
					trigger="sensitivity", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the mouse sensitivity, specifying time causes the value to change smoothly", 
					completion=case("sensitivity")+args("${1:<value>},${2:[time]}")+semicolon), 
				sublime.CompletionItem( #SERVER
					trigger="SERVER", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="IP of the server", 
					completion=var_wrap+"SERVER"+var_wrap), 
				sublime.CompletionItem( #SERVERMOTD
					trigger="SERVERMOTD", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Motto of the day of the server", 
					completion=var_wrap+"SERVERMOTD"+var_wrap), 
				sublime.CompletionItem( #SERVERNAME
					trigger="SERVERNAME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Name of the server", 
					completion=var_wrap+"SERVERNAME"+var_wrap), 
				sublime.CompletionItem( #set
					trigger="set", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the value of target to value", 
					completion=case("set")+args("${1:<target>},${2:[value]}")+semicolon), 
				sublime.CompletionItem( #setlabel
					trigger="setlabel", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the text (and optionally binding) of the specified label", 
					completion=case("setlabel")+args("${1:<labelname>},${2:<text>},${3:[binding]}")+semicolon), 
				sublime.CompletionItem( #setproperty
					trigger="setproperty", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the value of the specified property on the specified GUI control", 
					completion=case("setproperty")+args("${1:<control>},${2:<property>},${3:<value>}")+semicolon), 
				sublime.CompletionItem( #setres
					trigger="setres", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the size of the minecraft game window", 
					completion=case("setres")+args("${1:<width>},${2:<height>}")+semicolon), 
				sublime.CompletionItem( #setslotitem
					trigger="setslotitem", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Creative mode only, set the contents of a hot bar slot", 
					completion=case("setslotitem")+args("${1:<item>}:${2:[damage]},${3:[slot]},${4:[amount]}")+semicolon), 
				sublime.CompletionItem( #SHADERGROUP
					trigger="SHADERGROUP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Selected shader", 
					completion=var_wrap+"SHADERGROUP"+var_wrap), 
				sublime.CompletionItem( #shadergroup
					trigger="shadergroup", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the active shader group to the shader matching path", 
					completion=case("shadergroup")+args("${1:[path]}")+semicolon), 
				sublime.CompletionItem( #SHADERGROUPS
					trigger="SHADERGROUPS[]", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Array of available shaders", 
					completion=var_wrap+"SHADERGROUPS[]"+var_wrap), 
				sublime.CompletionItem( #showgui
					trigger="showgui", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Show a custom gui screen, creates it if it doesn't exist", 
					completion=case("showgui")+args("${1:<screen>},${2:[esc_screen]},${3:[macro_keys]}")+semicolon), 
				sublime.CompletionItem( #SIGNTEXT
					trigger="SIGNTEXT[]", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Array of lines on a sign the Player is looking at", 
					completion=var_wrap+"SIGNTEXT[]"+var_wrap), 
				sublime.CompletionItem( #slot
					trigger="slot", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Selects the specified slot on the hot bar", 
					completion=case("slot")+args("${1:<slot>}")+semicolon), 
				sublime.CompletionItem( #slotclick
					trigger="slotclick", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Simulates clicking on the specified slot in the current GUI", 
					completion=case("slotclick")+args("${1:<slot>},${2:[button]},${3:[shift]}")+semicolon), 
				sublime.CompletionItem( #SOUND
					trigger="SOUND", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Master Volume level", 
					completion=var_wrap+"SOUND"+var_wrap), 
				sublime.CompletionItem( #split
					trigger="split", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Splits the supplied source string on every delimiter into output[]", 
					completion=case("split")+args("${1:<delimiter>},${2:<source>},${3:[output]}[]")+semicolon), 
				sublime.CompletionItem( #sprint
					trigger="sprint", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the player state to sprinting if sufficient stamina (food)", 
					completion=case("sprint")+args("")+semicolon), 
				sublime.CompletionItem( #sqrt
					trigger="sqrt", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Calculate the rounded square root of value and store it in #outvar", 
					completion=case("sqrt")+args("${1:<value>},#${2:[outvar]}")+semicolon), 
				sublime.CompletionItem( #STACKSIZE
					trigger="STACKSIZE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Stack size of the equipped item", 
					completion=var_wrap+"STACKSIZE"+var_wrap), 
				sublime.CompletionItem( #stop
					trigger="stop", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Stops the current macro, or macros matching the specified ID", 
					completion=case("stop")+args("${1:[id]}")+semicolon), 
				sublime.CompletionItem( #store
					trigger="store", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Stores a value into one of the predefined parameter lists", 
					completion=case("store")+args("${1:<type>},${2:[name]}")+semicolon), 
				sublime.CompletionItem( #storeover
					trigger="storeover", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Stores a value into one of the predefined parameter lists", 
					completion=case("storeover")+args("${1:<type>},${2:[name]}")+semicolon), 
				sublime.CompletionItem( #strip
					trigger="strip", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Strips all formatting codes from the specified text and assigns the result to &target", 
					completion=case("strip")+args("&${1:<target>},${2:<text>}")+semicolon), 
				sublime.CompletionItem( #TICKS
					trigger="TICKS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="current world time value (which will be a static number if doDayNightCycle game rule is false)", 
					completion=var_wrap+"TICKS"+var_wrap), 
				sublime.CompletionItem( #tileid
					trigger="tileid", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Gets the legacy (numeric) ID for the specified tile", 
					completion=case("tileid")+args("${1:<item>}")+semicolon), 
				sublime.CompletionItem( #tilename
					trigger="tilename", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Get the descriptor for a legacy (numeric) tile ID", 
					completion=case("tilename")+args("${1:<id>}")+semicolon), 
				sublime.CompletionItem( #time
					trigger="time", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Stores the current time and date into &target, optionally using format specified", 
					completion=case("time")+args("&${1:<target>},${2:[format]}")+semicolon), 
				sublime.CompletionItem( #TIME
					trigger="TIME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Current time in the format hour:minute:second", 
					completion=var_wrap+"TIME"+var_wrap), 
				sublime.CompletionItem( #TIMESTAMP
					trigger="TIMESTAMP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="UNIX Timestamp", 
					completion=var_wrap+"TIMESTAMP"+var_wrap), 
				sublime.CompletionItem( #title
					trigger="title", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Displays the specified custom title", 
					completion=case("title")+args("${1:[title]},${2:[subtitle]},${3:[inticks]},${4:[showticks]},${5:[outticks]}")+semicolon), 
				sublime.CompletionItem( #toast
					trigger="toast", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Displays an user-defined toast", 
					completion=case("toast")+args("${1:[type]},${2:[icon]},${3:[text1]},${4:[text2]},${5:[ticks]}")+semicolon), 
				sublime.CompletionItem( #toggle
					trigger="toggle", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Toggles the specified boolean flag value", 
					completion=case("toggle")+args("${1:[flag]}")+semicolon), 
				sublime.CompletionItem( #togglekey
					trigger="togglekey", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Toggles the pressed state of the specified key binding, only works with pressable bindings", 
					completion=case("togglekey")+args("${1:<bind>}")+semicolon), 
				sublime.CompletionItem( #TOTALTICKS
					trigger="TOTALTICKS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="current total world time (which increases all the time regardless of the gamerule doDayNightCycle)", 
					completion=var_wrap+"TOTALTICKS"+var_wrap), 
				sublime.CompletionItem( #TOTALXP
					trigger="TOTALXP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Total amount of experience points", 
					completion=var_wrap+"TOTALXP"+var_wrap), 
				sublime.CompletionItem( #type
					trigger="type", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Injects the specified key sequence directly into the keyboard buffer at a rate of 1 key per tick", 
					completion=case("type")+args("${1:<text>}")+semicolon), 
				sublime.CompletionItem( #ucase
					trigger="ucase", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Converts the input string to upper case and stores it in output", 
					completion=case("ucase")+args("${1:<input>},&${2:[output]}")+semicolon), 
				sublime.CompletionItem( #unimport
					trigger="unimport", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Remove the specified configuration overlay if active", 
					completion=case("unimport")+args("")+semicolon), 
				sublime.CompletionItem( #UNIQUEID
					trigger="UNIQUEID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Returns a new UUID everytime it is accessed", 
					completion=var_wrap+"UNIQUEID"+var_wrap), 
				sublime.CompletionItem( #unset
					trigger="unset", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Un-sets the specified flag variable", 
					completion=case("unset")+args("${1:<flag>}")+semicolon), 
				sublime.CompletionItem( #unsprint
					trigger="unsprint", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the player state to not sprinting", 
					completion=case("unsprint")+args("")+semicolon), 
				sublime.CompletionItem( #UUID
					trigger="UUID", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="UUID of the Player", 
					completion=var_wrap+"UUID"+var_wrap), 
				sublime.CompletionItem( #VEHICLE
					trigger="VEHICLE", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Vehicle type", 
					completion=var_wrap+"VEHICLE"+var_wrap), 
				sublime.CompletionItem( #VEHICLEHEALTH
					trigger="VEHICLEHEALTH", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Vehicle health", 
					completion=var_wrap+"VEHICLEHEALTH"+var_wrap), 
				sublime.CompletionItem( #volume
					trigger="volume", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Sets the sound volume for the specified category", 
					completion=case("volume")+args("${1:<value>},${2:[category]}")+semicolon), 
				sublime.CompletionItem( #wait
					trigger="wait", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Pauses the script for the time specified", 
					completion=case("wait")+args("${1:<time>}")+semicolon), 
				sublime.CompletionItem( #walkto
					trigger="walkto", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_KEYWORD, 
					annotation="", 
					details="Was never offically in the mod", 
					completion=case("walkto")+args("${1:<x>},${2:<y>},${3:<z>},${4:[speed]},${5:[radius]}")+semicolon), 
				sublime.CompletionItem( #WEATHERVOLUME
					trigger="WEATHERVOLUME", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Volume level for Weather", 
					completion=var_wrap+"WEATHERVOLUME"+var_wrap), 
				sublime.CompletionItem( #XP
					trigger="XP", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Current amount of experience points", 
					completion=var_wrap+"XP"+var_wrap), 
				sublime.CompletionItem( #XPOS
					trigger="XPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Position in X direction", 
					completion=var_wrap+"XPOS"+var_wrap), 
				sublime.CompletionItem( #XPOSF
					trigger="XPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="The position in X direction with three decimal places after the comma as a string", 
					completion=var_wrap+"XPOSF"+var_wrap), 
				sublime.CompletionItem( #YAW
					trigger="YAW", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Yaw of the player", 
					completion=var_wrap+"YAW"+var_wrap), 
				sublime.CompletionItem( #YPOS
					trigger="YPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Position in Y direction", 
					completion=var_wrap+"YPOS"+var_wrap), 
				sublime.CompletionItem( #YPOSF
					trigger="YPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="The position in Y direction with three decimal places after the comma as a string", 
					completion=var_wrap+"YPOSF"+var_wrap), 
				sublime.CompletionItem( #ZPOS
					trigger="ZPOS", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="Position in Z direction", 
					completion=var_wrap+"ZPOS"+var_wrap), 
				sublime.CompletionItem( #ZPOSF
					trigger="ZPOSF", 
					completion_format=sublime.COMPLETION_FORMAT_SNIPPET, 
					kind=sublime.KIND_VARIABLE, 
					annotation="", 
					details="The position in Z direction with three decimal places after the comma as a string", 
					completion=var_wrap+"ZPOS"+var_wrap)
			]
			
			if in_string:
				return sublime.CompletionList([completion for completion in completions if completion.kind[0] == 7], flags=sublime.INHIBIT_EXPLICIT_COMPLETIONS)
			else:
				return sublime.CompletionList(completions, flags=sublime.INHIBIT_EXPLICIT_COMPLETIONS)
